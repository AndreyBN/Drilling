

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Nov 26 13:49:12 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F886 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296                           
   297                           	psect	idataBANK1
   298  0717                     __pidataBANK1:
   299                           
   300                           ;initializer for ___cgram
   301  0717  340C               	retlw	12
   302  0718  3412               	retlw	18
   303  0719  3412               	retlw	18
   304  071A  340C               	retlw	12
   305  071B  3400               	retlw	0
   306  071C  3400               	retlw	0
   307  071D  3400               	retlw	0
   308  071E  3400               	retlw	0
   309  071F  3400               	retlw	0
   310  0720  3404               	retlw	4
   311  0721  340E               	retlw	14
   312  0722  341F               	retlw	31
   313  0723  340E               	retlw	14
   314  0724  3404               	retlw	4
   315  0725  3400               	retlw	0
   316  0726  3400               	retlw	0
   317  0727  3404               	retlw	4
   318  0728  3404               	retlw	4
   319  0729  3404               	retlw	4
   320  072A  3404               	retlw	4
   321  072B  341F               	retlw	31
   322  072C  340E               	retlw	14
   323  072D  3404               	retlw	4
   324  072E  3400               	retlw	0
   325  072F  340A               	retlw	10
   326  0730  3415               	retlw	21
   327  0731  3411               	retlw	17
   328  0732  340A               	retlw	10
   329  0733  3404               	retlw	4
   330  0734  3400               	retlw	0
   331  0735  3400               	retlw	0
   332  0736  3400               	retlw	0
   333  0737  340A               	retlw	10
   334  0738  341F               	retlw	31
   335  0739  341F               	retlw	31
   336  073A  340E               	retlw	14
   337  073B  3404               	retlw	4
   338  073C  3400               	retlw	0
   339  073D  3400               	retlw	0
   340  073E  3400               	retlw	0
   341  073F  3400               	retlw	0
   342  0740  3400               	retlw	0
   343  0741  3400               	retlw	0
   344  0742  3400               	retlw	0
   345  0743  3400               	retlw	0
   346  0744  3400               	retlw	0
   347  0745  3400               	retlw	0
   348  0746  3400               	retlw	0
   349  0747  3400               	retlw	0
   350  0748  3400               	retlw	0
   351  0749  3400               	retlw	0
   352  074A  3400               	retlw	0
   353  074B  3400               	retlw	0
   354  074C  3400               	retlw	0
   355  074D  3400               	retlw	0
   356  074E  3400               	retlw	0
   357  074F  3400               	retlw	0
   358  0750  3400               	retlw	0
   359  0751  3400               	retlw	0
   360  0752  3400               	retlw	0
   361  0753  3400               	retlw	0
   362  0754  3400               	retlw	0
   363  0755  3400               	retlw	0
   364  0756  3400               	retlw	0
   365                           
   366                           	psect	strings
   367  0757                     __pstrings:
   368  0757                     stringtab:
   369  0757                     __stringtab:
   370  0757                     stringcode:	
   371                           ;	String table - string pointers are 1 byte each
   372                           
   373  0757                     stringdir:
   374  0757  3007               	movlw	high stringdir
   375  0758  008A               	movwf	10
   376  0759  0804               	movf	4,w
   377  075A  0A84               	incf	4,f
   378  075B  0782               	addwf	2,f
   379  075C                     __stringbase:
   380  075C  3400               	retlw	0
   381  075D                     __end_of__stringtab:
   382  075D                     _count_Hz:
   383  075D  3402               	retlw	2
   384  075E                     __end_of_count_Hz:
   385  075E                     _minute:
   386  075E  343C               	retlw	60
   387  075F                     __end_of_minute:
   388  075F                     _Magn_count:
   389  075F  3408               	retlw	8
   390  0760                     __end_of_Magn_count:
   391  0760                     _Reverse_:
   392  0760  3452               	retlw	82
   393  0761  3445               	retlw	69
   394  0762  3456               	retlw	86
   395  0763  3445               	retlw	69
   396  0764  3452               	retlw	82
   397  0765  3453               	retlw	83
   398  0766  3445               	retlw	69
   399  0767  3400               	retlw	0
   400  0768                     __end_of_Reverse_:
   401  0768                     _Forward_:
   402  0768  3446               	retlw	70
   403  0769  344F               	retlw	79
   404  076A  3452               	retlw	82
   405  076B  3457               	retlw	87
   406  076C  3441               	retlw	65
   407  076D  3452               	retlw	82
   408  076E  3444               	retlw	68
   409  076F  3400               	retlw	0
   410  0770                     __end_of_Forward_:
   411  0770                     _OFF_:
   412  0770  344F               	retlw	79
   413  0771  3446               	retlw	70
   414  0772  3446               	retlw	70
   415  0773  3400               	retlw	0
   416  0774                     __end_of_OFF_:
   417  0774                     _ON_:
   418  0774  3420               	retlw	32
   419  0775  344F               	retlw	79
   420  0776  344E               	retlw	78
   421  0777  3400               	retlw	0
   422  0778                     __end_of_ON_:
   423  0778                     _Tapping:
   424  0778  3454               	retlw	84
   425  0779  3441               	retlw	65
   426  077A  3450               	retlw	80
   427  077B  3400               	retlw	0
   428  077C                     __end_of_Tapping:
   429  0005                     _PORTA	set	5
   430  0005                     _PORTAbits	set	5
   431  000F                     _TMR1H	set	15
   432  000E                     _TMR1L	set	14
   433  0001                     _TMR0	set	1
   434  000B                     _INTCON	set	11
   435  0007                     _PORTC	set	7
   436  0006                     _PORTB	set	6
   437  002D                     _RA5	set	45
   438  002C                     _RA4	set	44
   439  005A                     _T0IF	set	90
   440  0059                     _INTF	set	89
   441  0034                     _RB4	set	52
   442  003F                     _RC7	set	63
   443  0032                     _RB2	set	50
   444  0033                     _RB3	set	51
   445  0037                     _RB7	set	55
   446  0031                     _RB1	set	49
   447  0036                     _RB6	set	54
   448  0035                     _RB5	set	53
   449  0060                     _TMR1IF	set	96
   450  0080                     _TMR1ON	set	128
   451  0081                     _TMR1CS	set	129
   452  0083                     _T1OSCEN	set	131
   453  0084                     _T1CKPS0	set	132
   454  0085                     _T1CKPS1	set	133
   455  0086                     _TMR1GE	set	134
   456  0085                     _TRISAbits	set	133
   457  0095                     _WPUB	set	149
   458  0081                     _OPTION_REG	set	129
   459  0087                     _TRISC	set	135
   460  0086                     _TRISB	set	134
   461  0085                     _TRISA	set	133
   462  0460                     _TMR1IE	set	1120
   463  0189                     _ANSELH	set	393
   464  0188                     _ANSEL	set	392
   465  077C                     STR_1:
   466  077C  3453               	retlw	83	;'S'
   467  077D  3470               	retlw	112	;'p'
   468  077E  3465               	retlw	101	;'e'
   469  077F  3465               	retlw	101	;'e'
   470  0780  3464               	retlw	100	;'d'
   471  0781  3400               	retlw	0
   472  0782                     STR_6:
   473  0782  3420               	retlw	32	;' '
   474  0783  3420               	retlw	32	;' '
   475  0784  3420               	retlw	32	;' '
   476  0785  3400               	retlw	0
   477  0786                     STR_2:
   478  0786  3472               	retlw	114	;'r'
   479  0787  3470               	retlw	112	;'p'
   480  0788  346D               	retlw	109	;'m'
   481  0789  3400               	retlw	0
   482  0784                     
   483                           	psect	cinit
   484  000F                     start_initialization:	
   485                           ; #config settings
   486                           
   487  000F                     __initialization:
   488                           
   489                           ; Initialize objects allocated to BANK1
   490  000F  1383               	bcf	3,7	;select IRP bank0
   491  0010  30E0               	movlw	low (__pdataBANK1+64)
   492  0011  00FD               	movwf	btemp+-1
   493  0012  3007               	movlw	high __pidataBANK1
   494  0013  00FE               	movwf	btemp
   495  0014  3017               	movlw	low __pidataBANK1
   496  0015  00FF               	movwf	btemp+1
   497  0016  30A0               	movlw	low __pdataBANK1
   498  0017  0084               	movwf	4
   499  0018  120A  158A  27A6  120A  118A  	fcall	init_ram0
   500                           
   501                           ; Clear objects allocated to BANK0
   502  001D  01BB               	clrf	__pbssBANK0& (0+127)
   503  001E  01BC               	clrf	(__pbssBANK0+1)& (0+127)
   504  001F  01BD               	clrf	(__pbssBANK0+2)& (0+127)
   505  0020  01BE               	clrf	(__pbssBANK0+3)& (0+127)
   506  0021  01BF               	clrf	(__pbssBANK0+4)& (0+127)
   507  0022  01C0               	clrf	(__pbssBANK0+5)& (0+127)
   508  0023  01C1               	clrf	(__pbssBANK0+6)& (0+127)
   509  0024  01C2               	clrf	(__pbssBANK0+7)& (0+127)
   510  0025  01C3               	clrf	(__pbssBANK0+8)& (0+127)
   511  0026  01C4               	clrf	(__pbssBANK0+9)& (0+127)
   512  0027  01C5               	clrf	(__pbssBANK0+10)& (0+127)
   513  0028  01C6               	clrf	(__pbssBANK0+11)& (0+127)
   514  0029  01C7               	clrf	(__pbssBANK0+12)& (0+127)
   515                           
   516                           ; Clear objects allocated to COMMON
   517  002A  01F8               	clrf	__pbssCOMMON& (0+127)
   518  002B  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   519  002C  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   520  002D                     end_of_initialization:	
   521                           ;End of C runtime variable initialization code
   522                           
   523  002D                     __end_of__initialization:
   524  002D  0183               	clrf	3
   525  002E  120A  118A  2831   	ljmp	_main	;jump to C main() function
   526                           
   527                           	psect	bssCOMMON
   528  0078                     __pbssCOMMON:
   529  0078                     _delay_beep:
   530  0078                     	ds	1
   531  0079                     _flag_delay:
   532  0079                     	ds	1
   533  007A                     _TIM0_count:
   534  007A                     	ds	1
   535                           
   536                           	psect	bssBANK0
   537  003B                     __pbssBANK0:
   538  003B                     LCDWriteInt@F1306:
   539  003B                     	ds	5
   540  0040                     _count2:
   541  0040                     	ds	2
   542  0042                     _count:
   543  0042                     	ds	2
   544  0044                     _flag_timer1:
   545  0044                     	ds	2
   546  0046                     _percent:
   547  0046                     	ds	1
   548  0047                     _keypressed:
   549  0047                     	ds	1
   550                           
   551                           	psect	dataBANK1
   552  00A0                     __pdataBANK1:
   553  00A0                     ___cgram:
   554  00A0                     	ds	64
   555                           
   556                           	psect	inittext
   557  0FA2                     init_fetch0:	
   558                           ;	Called with low address in FSR and high address in W
   559                           
   560  0FA2  087E               	movf	btemp,w
   561  0FA3  008A               	movwf	10
   562  0FA4  087F               	movf	btemp+1,w
   563  0FA5  0082               	movwf	2
   564  0FA6                     init_ram0:	
   565                           ;Called with:
   566                           ;	high address of idata address in btemp 
   567                           ;	low address of idata address in btemp+1 
   568                           ;	low address of data in FSR
   569                           ;	high address + 1 of data in btemp-1
   570                           
   571  0FA6  120A  158A  27A2  120A  158A  	fcall	init_fetch0
   572  0FAB  0080               	movwf	0
   573  0FAC  0A84               	incf	4,f
   574  0FAD  0804               	movf	4,w
   575  0FAE  067D               	xorwf	btemp+-1,w
   576  0FAF  1903               	btfsc	3,2
   577  0FB0  3400               	retlw	0
   578  0FB1  0AFF               	incf	btemp+1,f
   579  0FB2  1903               	btfsc	3,2
   580  0FB3  0AFE               	incf	btemp,f
   581  0FB4  2FA6               	goto	init_ram0
   582                           
   583                           	psect	cstackCOMMON
   584  0070                     __pcstackCOMMON:
   585  0070                     ?_LCDInit:
   586  0070                     ?_Forward:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_LCDWriteString:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_Reverse:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_BEEP:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_DRIL_ON:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_DRIL_OFF:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_CheckTAPPING:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_BEEP1:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_main:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_isr:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ??_isr:	
   617                           ; 1 bytes @ 0x0
   618                           
   619                           
   620                           ; 1 bytes @ 0x0
   621  0070                     	ds	3
   622  0073                     ?_LCDByte:
   623  0073                     ??_BEEP:	
   624                           ; 1 bytes @ 0x3
   625                           
   626  0073                     ??_CheckTAPPING:	
   627                           ; 1 bytes @ 0x3
   628                           
   629  0073                     ??_BEEP1:	
   630                           ; 1 bytes @ 0x3
   631                           
   632  0073                     ?___wmul:	
   633                           ; 1 bytes @ 0x3
   634                           
   635  0073                     ?___awdiv:	
   636                           ; 2 bytes @ 0x3
   637                           
   638  0073                     ?___awmod:	
   639                           ; 2 bytes @ 0x3
   640                           
   641  0073                     LCDByte@isdata:	
   642                           ; 2 bytes @ 0x3
   643                           
   644  0073                     CheckTAPPING@butcount:	
   645                           ; 1 bytes @ 0x3
   646                           
   647  0073                     ___wmul@multiplier:	
   648                           ; 2 bytes @ 0x3
   649                           
   650  0073                     ___awdiv@divisor:	
   651                           ; 2 bytes @ 0x3
   652                           
   653  0073                     ___awmod@divisor:	
   654                           ; 2 bytes @ 0x3
   655                           
   656                           
   657                           ; 2 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     ??_LCDByte:
   660                           
   661                           ; 1 bytes @ 0x4
   662  0074                     	ds	1
   663  0075                     CheckTAPPING@result:
   664  0075                     ___wmul@multiplicand:	
   665                           ; 1 bytes @ 0x5
   666                           
   667  0075                     ___awdiv@dividend:	
   668                           ; 2 bytes @ 0x5
   669                           
   670  0075                     ___awmod@dividend:	
   671                           ; 2 bytes @ 0x5
   672                           
   673                           
   674                           ; 2 bytes @ 0x5
   675  0075                     	ds	1
   676  0076                     ??_LCDInit:
   677  0076                     ?_LCDGotoXY:	
   678                           ; 1 bytes @ 0x6
   679                           
   680  0076                     ??_LCDWriteString:	
   681                           ; 1 bytes @ 0x6
   682                           
   683  0076                     LCDGotoXY@y:	
   684                           ; 1 bytes @ 0x6
   685                           
   686                           
   687                           ; 1 bytes @ 0x6
   688  0076                     	ds	1
   689  0077                     ??_LCDGotoXY:
   690  0077                     ??___wmul:	
   691                           ; 1 bytes @ 0x7
   692                           
   693  0077                     ??___awdiv:	
   694                           ; 1 bytes @ 0x7
   695                           
   696  0077                     ??___awmod:	
   697                           ; 1 bytes @ 0x7
   698                           
   699                           
   700                           ; 1 bytes @ 0x7
   701  0077                     	ds	1
   702  0078                     ??_Reverse:
   703  0078                     ??_DRIL_OFF:	
   704                           ; 1 bytes @ 0x8
   705                           
   706                           
   707                           	psect	cstackBANK0
   708  0020                     __pcstackBANK0:	
   709                           ; 1 bytes @ 0x8
   710                           
   711  0020                     LCDByte@hn:
   712  0020                     ___awdiv@counter:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0020                     ___awmod@counter:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0020                     ___wmul@product:	
   719                           ; 1 bytes @ 0x0
   720                           
   721                           
   722                           ; 2 bytes @ 0x0
   723  0020                     	ds	1
   724  0021                     LCDByte@ln:
   725  0021                     ___awdiv@sign:	
   726                           ; 1 bytes @ 0x1
   727                           
   728  0021                     ___awmod@sign:	
   729                           ; 1 bytes @ 0x1
   730                           
   731                           
   732                           ; 1 bytes @ 0x1
   733  0021                     	ds	1
   734  0022                     LCDByte@c:
   735  0022                     ___awdiv@quotient:	
   736                           ; 1 bytes @ 0x2
   737                           
   738                           
   739                           ; 2 bytes @ 0x2
   740  0022                     	ds	1
   741  0023                     LCDByte@temp:
   742                           
   743                           ; 1 bytes @ 0x3
   744  0023                     	ds	1
   745  0024                     ?_LCDWriteInt:
   746  0024                     LCDInit@style:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0024                     LCDWriteString@cc:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0024                     LCDGotoXY@x:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0024                     LCDWriteInt@val:	
   756                           ; 1 bytes @ 0x4
   757                           
   758                           
   759                           ; 2 bytes @ 0x4
   760  0024                     	ds	1
   761  0025                     LCDInit@__i:
   762  0025                     LCDWriteString@msg:	
   763                           ; 1 bytes @ 0x5
   764                           
   765                           
   766                           ; 1 bytes @ 0x5
   767  0025                     	ds	1
   768  0026                     ??_Forward:
   769  0026                     ??_DRIL_ON:	
   770                           ; 1 bytes @ 0x6
   771                           
   772  0026                     LCDWriteInt@field_length:	
   773                           ; 1 bytes @ 0x6
   774                           
   775                           
   776                           ; 1 bytes @ 0x6
   777  0026                     	ds	1
   778  0027                     ??_LCDWriteInt:
   779                           
   780                           ; 1 bytes @ 0x7
   781  0027                     	ds	3
   782  002A                     LCDWriteInt@str:
   783                           
   784                           ; 5 bytes @ 0xA
   785  002A                     	ds	5
   786  002F                     LCDWriteInt@j:
   787                           
   788                           ; 2 bytes @ 0xF
   789  002F                     	ds	2
   790  0031                     LCDWriteInt@i:
   791                           
   792                           ; 2 bytes @ 0x11
   793  0031                     	ds	2
   794  0033                     ??_main:
   795                           
   796                           ; 1 bytes @ 0x13
   797  0033                     	ds	3
   798  0036                     main@DIRECTION:
   799                           
   800                           ; 1 bytes @ 0x16
   801  0036                     	ds	1
   802  0037                     main@flag_tapping:
   803                           
   804                           ; 1 bytes @ 0x17
   805  0037                     	ds	1
   806  0038                     main@ON_FLAG:
   807                           
   808                           ; 1 bytes @ 0x18
   809  0038                     	ds	1
   810  0039                     main@RPM_count:
   811                           
   812                           ; 2 bytes @ 0x19
   813  0039                     	ds	2
   814                           
   815                           	psect	maintext
   816  0031                     __pmaintext:	
   817 ;;
   818 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   819 ;;
   820 ;; *************** function _main *****************
   821 ;; Defined at:
   822 ;;		line 31 in file "main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  RPM_count       2   25[BANK0 ] unsigned int 
   827 ;;  ON_FLAG         1   24[BANK0 ] unsigned char 
   828 ;;  flag_tapping    1   23[BANK0 ] unsigned char 
   829 ;;  DIRECTION       1   22[BANK0 ] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : B00/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         0       0       0       0       0
   840 ;;      Locals:         0       5       0       0       0
   841 ;;      Temps:          0       3       0       0       0
   842 ;;      Totals:         0       8       0       0       0
   843 ;;Total ram usage:        8 bytes
   844 ;; Hardware stack levels required when called:    4
   845 ;; This function calls:
   846 ;;		_BEEP
   847 ;;		_BEEP1
   848 ;;		_CheckTAPPING
   849 ;;		_DRIL_OFF
   850 ;;		_DRIL_ON
   851 ;;		_Forward
   852 ;;		_LCDByte
   853 ;;		_LCDGotoXY
   854 ;;		_LCDInit
   855 ;;		_LCDWriteInt
   856 ;;		_LCDWriteString
   857 ;;		_Reverse
   858 ;;		___wmul
   859 ;; This function is called by:
   860 ;;		Startup code after reset
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           
   865                           ;psect for function _main
   866  0031                     _main:
   867  0031                     l2374:	
   868                           ;incstack = 0
   869                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   870                           
   871                           
   872                           ;main.c: 33: unsigned char ON_FLAG = 0;
   873  0031  1283               	bcf	3,5	;RP0=0, select bank0
   874  0032  1303               	bcf	3,6	;RP1=0, select bank0
   875  0033  01B8               	clrf	main@ON_FLAG
   876                           
   877                           ;main.c: 35: unsigned char flag_tapping = 0;
   878  0034  01B7               	clrf	main@flag_tapping
   879                           
   880                           ;main.c: 36: unsigned int RPM_count = 0;
   881  0035  01B9               	clrf	main@RPM_count
   882  0036  01BA               	clrf	main@RPM_count+1
   883  0037                     l2376:
   884                           
   885                           ;main.c: 38: TRISA = 0b11000000;
   886  0037  30C0               	movlw	192
   887  0038  1683               	bsf	3,5	;RP0=1, select bank1
   888  0039  1303               	bcf	3,6	;RP1=0, select bank1
   889  003A  0085               	movwf	5	;volatile
   890  003B                     l2378:
   891                           
   892                           ;main.c: 39: ANSEL = 0x00;
   893  003B  1683               	bsf	3,5	;RP0=1, select bank3
   894  003C  1703               	bsf	3,6	;RP1=1, select bank3
   895  003D  0188               	clrf	8	;volatile
   896                           
   897                           ;main.c: 41: TRISB |= 0xFF;
   898  003E  30FF               	movlw	255
   899  003F  1683               	bsf	3,5	;RP0=1, select bank1
   900  0040  1303               	bcf	3,6	;RP1=0, select bank1
   901  0041  0086               	movwf	6	;volatile
   902                           
   903                           ;main.c: 43: PORTB |= 0xFF;
   904  0042  30FF               	movlw	255
   905  0043  1283               	bcf	3,5	;RP0=0, select bank0
   906  0044  1303               	bcf	3,6	;RP1=0, select bank0
   907  0045  0086               	movwf	6	;volatile
   908  0046                     l2380:
   909                           
   910                           ;main.c: 45: TRISC &= ~0x7F;
   911  0046  3080               	movlw	128
   912  0047  00B3               	movwf	??_main
   913  0048  0833               	movf	??_main,w
   914  0049  1683               	bsf	3,5	;RP0=1, select bank1
   915  004A  1303               	bcf	3,6	;RP1=0, select bank1
   916  004B  0587               	andwf	7,f	;volatile
   917  004C                     l2382:
   918                           
   919                           ;main.c: 48: ANSELH &= ~0x3F;
   920  004C  30C0               	movlw	192
   921  004D  1283               	bcf	3,5	;RP0=0, select bank0
   922  004E  1303               	bcf	3,6	;RP1=0, select bank0
   923  004F  00B3               	movwf	??_main
   924  0050  0833               	movf	??_main,w
   925  0051  1683               	bsf	3,5	;RP0=1, select bank3
   926  0052  1703               	bsf	3,6	;RP1=1, select bank3
   927  0053  0589               	andwf	9,f	;volatile
   928  0054                     l2384:
   929                           
   930                           ;main.c: 53: PORTC |= 0xDF;
   931  0054  30DF               	movlw	223
   932  0055  1283               	bcf	3,5	;RP0=0, select bank0
   933  0056  1303               	bcf	3,6	;RP1=0, select bank0
   934  0057  00B3               	movwf	??_main
   935  0058  0833               	movf	??_main,w
   936  0059  0487               	iorwf	7,f	;volatile
   937  005A                     l2386:
   938                           
   939                           ;main.c: 56: OPTION_REG=0b00000111;
   940  005A  3007               	movlw	7
   941  005B  1683               	bsf	3,5	;RP0=1, select bank1
   942  005C  1303               	bcf	3,6	;RP1=0, select bank1
   943  005D  0081               	movwf	1	;volatile
   944  005E                     l2388:
   945                           
   946                           ;main.c: 66: WPUB |=0xFF;
   947  005E  30FF               	movlw	255
   948  005F  0095               	movwf	21	;volatile
   949  0060                     l2390:
   950                           
   951                           ;main.c: 67: INTCON = 0b11110000;
   952  0060  30F0               	movlw	240
   953  0061  008B               	movwf	11	;volatile
   954  0062                     l2392:
   955                           
   956                           ;main.c: 73: TMR0 = 0;
   957  0062  1283               	bcf	3,5	;RP0=0, select bank0
   958  0063  1303               	bcf	3,6	;RP1=0, select bank0
   959  0064  0181               	clrf	1	;volatile
   960  0065                     l2394:
   961                           
   962                           ;main.c: 75: TMR1IE = 1;
   963  0065  1683               	bsf	3,5	;RP0=1, select bank1
   964  0066  1303               	bcf	3,6	;RP1=0, select bank1
   965  0067  140C               	bsf	12,0	;volatile
   966  0068                     l2396:
   967                           
   968                           ;main.c: 77: TMR1GE = 0;
   969  0068  1283               	bcf	3,5	;RP0=0, select bank0
   970  0069  1303               	bcf	3,6	;RP1=0, select bank0
   971  006A  1310               	bcf	16,6	;volatile
   972  006B                     l2398:
   973                           
   974                           ;main.c: 78: T1CKPS1 = 1;
   975  006B  1690               	bsf	16,5	;volatile
   976  006C                     l2400:
   977                           
   978                           ;main.c: 79: T1CKPS0 = 1;
   979  006C  1610               	bsf	16,4	;volatile
   980  006D                     l2402:
   981                           
   982                           ;main.c: 90: T1OSCEN = 0;
   983  006D  1190               	bcf	16,3	;volatile
   984  006E                     l2404:
   985                           
   986                           ;main.c: 91: TMR1CS = 0;
   987  006E  1090               	bcf	16,1	;volatile
   988  006F                     l2406:
   989                           
   990                           ;main.c: 92: TMR1ON = 1;
   991  006F  1410               	bsf	16,0	;volatile
   992  0070                     l2408:
   993                           
   994                           ;main.c: 94: TMR1IF = 0;
   995  0070  100C               	bcf	12,0	;volatile
   996  0071                     l2410:
   997                           
   998                           ;main.c: 96: TMR1L=0xDC;
   999  0071  30DC               	movlw	220
  1000  0072  008E               	movwf	14	;volatile
  1001  0073                     l2412:
  1002                           
  1003                           ;main.c: 97: TMR1H=0xB;
  1004  0073  300B               	movlw	11
  1005  0074  008F               	movwf	15	;volatile
  1006  0075                     l2414:
  1007                           
  1008                           ;main.c: 99: _delay((unsigned long)((200)*(4000000/4000.0)));
  1009  0075  3002               	movlw	2
  1010  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0078  00B5               	movwf	??_main+2
  1013  0079  3004               	movlw	4
  1014  007A  00B4               	movwf	??_main+1
  1015  007B  30B9               	movlw	185
  1016  007C  00B3               	movwf	??_main
  1017  007D                     u2107:
  1018  007D  0BB3               	decfsz	??_main,f
  1019  007E  287D               	goto	u2107
  1020  007F  0BB4               	decfsz	??_main+1,f
  1021  0080  287D               	goto	u2107
  1022  0081  0BB5               	decfsz	??_main+2,f
  1023  0082  287D               	goto	u2107
  1024  0083  2884               	nop2
  1025  0084                     l2416:
  1026                           
  1027                           ;main.c: 100: PORTC &=~(1<<5);;
  1028  0084  30DF               	movlw	223
  1029  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0087  00B3               	movwf	??_main
  1032  0088  0833               	movf	??_main,w
  1033  0089  0587               	andwf	7,f	;volatile
  1034  008A                     l2418:
  1035                           
  1036                           ;main.c: 101: _delay((unsigned long)((200)*(4000000/4000.0)));
  1037  008A  3002               	movlw	2
  1038  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1039  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1040  008D  00B5               	movwf	??_main+2
  1041  008E  3004               	movlw	4
  1042  008F  00B4               	movwf	??_main+1
  1043  0090  30B9               	movlw	185
  1044  0091  00B3               	movwf	??_main
  1045  0092                     u2117:
  1046  0092  0BB3               	decfsz	??_main,f
  1047  0093  2892               	goto	u2117
  1048  0094  0BB4               	decfsz	??_main+1,f
  1049  0095  2892               	goto	u2117
  1050  0096  0BB5               	decfsz	??_main+2,f
  1051  0097  2892               	goto	u2117
  1052  0098  2899               	nop2
  1053  0099                     l2420:
  1054                           
  1055                           ;main.c: 102: PORTC |=(1<<5);;
  1056  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1057  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1058  009B  1687               	bsf	7,5	;volatile
  1059  009C                     l2422:
  1060                           
  1061                           ;main.c: 103: _delay((unsigned long)((200)*(4000000/4000.0)));
  1062  009C  3002               	movlw	2
  1063  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1064  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1065  009F  00B5               	movwf	??_main+2
  1066  00A0  3004               	movlw	4
  1067  00A1  00B4               	movwf	??_main+1
  1068  00A2  30B9               	movlw	185
  1069  00A3  00B3               	movwf	??_main
  1070  00A4                     u2127:
  1071  00A4  0BB3               	decfsz	??_main,f
  1072  00A5  28A4               	goto	u2127
  1073  00A6  0BB4               	decfsz	??_main+1,f
  1074  00A7  28A4               	goto	u2127
  1075  00A8  0BB5               	decfsz	??_main+2,f
  1076  00A9  28A4               	goto	u2127
  1077  00AA  28AB               	nop2
  1078  00AB                     l2424:
  1079                           
  1080                           ;main.c: 104: PORTC &=~(1<<5);;
  1081  00AB  30DF               	movlw	223
  1082  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1083  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1084  00AE  00B3               	movwf	??_main
  1085  00AF  0833               	movf	??_main,w
  1086  00B0  0587               	andwf	7,f	;volatile
  1087  00B1                     l2426:
  1088                           
  1089                           ;main.c: 105: _delay((unsigned long)((200)*(4000000/4000.0)));
  1090  00B1  3002               	movlw	2
  1091  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1092  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1093  00B4  00B5               	movwf	??_main+2
  1094  00B5  3004               	movlw	4
  1095  00B6  00B4               	movwf	??_main+1
  1096  00B7  30B9               	movlw	185
  1097  00B8  00B3               	movwf	??_main
  1098  00B9                     u2137:
  1099  00B9  0BB3               	decfsz	??_main,f
  1100  00BA  28B9               	goto	u2137
  1101  00BB  0BB4               	decfsz	??_main+1,f
  1102  00BC  28B9               	goto	u2137
  1103  00BD  0BB5               	decfsz	??_main+2,f
  1104  00BE  28B9               	goto	u2137
  1105  00BF  28C0               	nop2
  1106  00C0                     l2428:
  1107                           
  1108                           ;main.c: 106: PORTC |=(1<<5);;
  1109  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1110  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1111  00C2  1687               	bsf	7,5	;volatile
  1112  00C3                     l2430:
  1113                           
  1114                           ;main.c: 107: _delay((unsigned long)((200)*(4000000/4000.0)));
  1115  00C3  3002               	movlw	2
  1116  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1117  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1118  00C6  00B5               	movwf	??_main+2
  1119  00C7  3004               	movlw	4
  1120  00C8  00B4               	movwf	??_main+1
  1121  00C9  30B9               	movlw	185
  1122  00CA  00B3               	movwf	??_main
  1123  00CB                     u2147:
  1124  00CB  0BB3               	decfsz	??_main,f
  1125  00CC  28CB               	goto	u2147
  1126  00CD  0BB4               	decfsz	??_main+1,f
  1127  00CE  28CB               	goto	u2147
  1128  00CF  0BB5               	decfsz	??_main+2,f
  1129  00D0  28CB               	goto	u2147
  1130  00D1  28D2               	nop2
  1131  00D2                     l2432:
  1132                           
  1133                           ;main.c: 108: LCDInit(0B00000000);
  1134  00D2  3000               	movlw	0
  1135  00D3  120A  118A  24EF  120A  118A  	fcall	_LCDInit
  1136  00D8                     l2434:
  1137                           
  1138                           ;main.c: 111: (LCDByte(0b00000001,0));
  1139  00D8  01F3               	clrf	LCDByte@isdata
  1140  00D9  3001               	movlw	1
  1141  00DA  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  1142  00DF                     l2436:
  1143                           
  1144                           ;main.c: 112: _delay((unsigned long)((10)*(4000000/4000.0)));
  1145  00DF  300D               	movlw	13
  1146  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1147  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1148  00E2  00B4               	movwf	??_main+1
  1149  00E3  30FB               	movlw	251
  1150  00E4  00B3               	movwf	??_main
  1151  00E5                     u2157:
  1152  00E5  0BB3               	decfsz	??_main,f
  1153  00E6  28E5               	goto	u2157
  1154  00E7  0BB4               	decfsz	??_main+1,f
  1155  00E8  28E5               	goto	u2157
  1156  00E9                     l2438:
  1157                           
  1158                           ;main.c: 114: DIRECTION = Forward();
  1159  00E9  120A  158A  27B5  120A  118A  	fcall	_Forward
  1160  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1161  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1162  00F0  00B3               	movwf	??_main
  1163  00F1  0833               	movf	??_main,w
  1164  00F2  00B6               	movwf	main@DIRECTION
  1165  00F3                     l2440:
  1166                           
  1167                           ;main.c: 116: LCDGotoXY(8,0);
  1168  00F3  01F6               	clrf	LCDGotoXY@y
  1169  00F4  3008               	movlw	8
  1170  00F5  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  1171  00FA                     l2442:
  1172                           
  1173                           ;main.c: 117: LCDWriteString(OFF_);
  1174  00FA  3014               	movlw	(low ((_OFF_-__stringbase)| (0+32768)))& (0+255)
  1175  00FB  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  1176  0100                     l2444:
  1177                           
  1178                           ;main.c: 119: LCDGotoXY(0,1);
  1179  0100  01F6               	clrf	LCDGotoXY@y
  1180  0101  0AF6               	incf	LCDGotoXY@y,f
  1181  0102  3000               	movlw	0
  1182  0103  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  1183  0108                     l2446:
  1184                           
  1185                           ;main.c: 120: LCDWriteString("Speed");
  1186  0108  3020               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1187  0109  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  1188  010E                     l2448:
  1189                           
  1190                           ;main.c: 121: LCDGotoXY(13,1);
  1191  010E  01F6               	clrf	LCDGotoXY@y
  1192  010F  0AF6               	incf	LCDGotoXY@y,f
  1193  0110  300D               	movlw	13
  1194  0111  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  1195  0116                     l2450:
  1196                           
  1197                           ;main.c: 122: LCDWriteString("rpm");
  1198  0116  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1199  0117  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  1200  011C                     l2452:
  1201                           
  1202                           ;main.c: 124: PORTC &=~(1<<3);;
  1203  011C  30F7               	movlw	247
  1204  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1205  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1206  011F  00B3               	movwf	??_main
  1207  0120  0833               	movf	??_main,w
  1208  0121  0587               	andwf	7,f	;volatile
  1209  0122                     l2454:
  1210                           
  1211                           ;main.c: 125: _delay((unsigned long)((10)*(4000000/4000.0)));
  1212  0122  300D               	movlw	13
  1213  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0125  00B4               	movwf	??_main+1
  1216  0126  30FB               	movlw	251
  1217  0127  00B3               	movwf	??_main
  1218  0128                     u2167:
  1219  0128  0BB3               	decfsz	??_main,f
  1220  0129  2928               	goto	u2167
  1221  012A  0BB4               	decfsz	??_main+1,f
  1222  012B  2928               	goto	u2167
  1223  012C                     l2456:
  1224                           
  1225                           ;main.c: 126: PORTC &=~(1<<5);;
  1226  012C  30DF               	movlw	223
  1227  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1228  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1229  012F  00B3               	movwf	??_main
  1230  0130  0833               	movf	??_main,w
  1231  0131  0587               	andwf	7,f	;volatile
  1232  0132                     l2458:
  1233                           
  1234                           ;main.c: 129: {;main.c: 132: if (!RB5)
  1235  0132  1A86               	btfsc	6,5	;volatile
  1236  0133  2935               	goto	u1811
  1237  0134  2936               	goto	u1810
  1238  0135                     u1811:
  1239  0135  295B               	goto	l2470
  1240  0136                     u1810:
  1241  0136                     l2460:
  1242                           
  1243                           ;main.c: 133: {;main.c: 134: _delay((unsigned long)((30)*(4000000/4000.0)));
  1244  0136  3027               	movlw	39
  1245  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0139  00B4               	movwf	??_main+1
  1248  013A  30F4               	movlw	244
  1249  013B  00B3               	movwf	??_main
  1250  013C                     u2177:
  1251  013C  0BB3               	decfsz	??_main,f
  1252  013D  293C               	goto	u2177
  1253  013E  0BB4               	decfsz	??_main+1,f
  1254  013F  293C               	goto	u2177
  1255  0140  0000               	nop
  1256  0141                     l2462:
  1257                           
  1258                           ;main.c: 135: if (!RB5)
  1259  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0143  1A86               	btfsc	6,5	;volatile
  1262  0144  2946               	goto	u1821
  1263  0145  2947               	goto	u1820
  1264  0146                     u1821:
  1265  0146  295B               	goto	l2470
  1266  0147                     u1820:
  1267  0147                     l2464:
  1268                           
  1269                           ;main.c: 136: {;main.c: 140: if (!ON_FLAG) DIRECTION = Reverse();
  1270  0147  0838               	movf	main@ON_FLAG,w
  1271  0148  1D03               	btfss	3,2
  1272  0149  294B               	goto	u1831
  1273  014A  294C               	goto	u1830
  1274  014B                     u1831:
  1275  014B  2956               	goto	l2468
  1276  014C                     u1830:
  1277  014C                     l2466:
  1278  014C  120A  158A  277D  120A  118A  	fcall	_Reverse
  1279  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0153  00B3               	movwf	??_main
  1282  0154  0833               	movf	??_main,w
  1283  0155  00B6               	movwf	main@DIRECTION
  1284  0156                     l2468:
  1285                           
  1286                           ;main.c: 141: BEEP();
  1287  0156  120A  158A  2771  120A  118A  	fcall	_BEEP
  1288  015B                     l2470:
  1289                           
  1290                           ;main.c: 170: };main.c: 171: };main.c: 176: if (!RB6)
  1291  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1292  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1293  015D  1B06               	btfsc	6,6	;volatile
  1294  015E  2960               	goto	u1841
  1295  015F  2961               	goto	u1840
  1296  0160                     u1841:
  1297  0160  2986               	goto	l2482
  1298  0161                     u1840:
  1299  0161                     l2472:
  1300                           
  1301                           ;main.c: 177: {;main.c: 178: _delay((unsigned long)((30)*(4000000/4000.0)));
  1302  0161  3027               	movlw	39
  1303  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0164  00B4               	movwf	??_main+1
  1306  0165  30F4               	movlw	244
  1307  0166  00B3               	movwf	??_main
  1308  0167                     u2187:
  1309  0167  0BB3               	decfsz	??_main,f
  1310  0168  2967               	goto	u2187
  1311  0169  0BB4               	decfsz	??_main+1,f
  1312  016A  2967               	goto	u2187
  1313  016B  0000               	nop
  1314  016C                     l2474:
  1315                           
  1316                           ;main.c: 179: if (!RB6)
  1317  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1318  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1319  016E  1B06               	btfsc	6,6	;volatile
  1320  016F  2971               	goto	u1851
  1321  0170  2972               	goto	u1850
  1322  0171                     u1851:
  1323  0171  2986               	goto	l2482
  1324  0172                     u1850:
  1325  0172                     l2476:
  1326                           
  1327                           ;main.c: 180: {;main.c: 183: if (!ON_FLAG) DIRECTION = Forward();
  1328  0172  0838               	movf	main@ON_FLAG,w
  1329  0173  1D03               	btfss	3,2
  1330  0174  2976               	goto	u1861
  1331  0175  2977               	goto	u1860
  1332  0176                     u1861:
  1333  0176  2981               	goto	l2480
  1334  0177                     u1860:
  1335  0177                     l2478:
  1336  0177  120A  158A  27B5  120A  118A  	fcall	_Forward
  1337  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1338  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1339  017E  00B3               	movwf	??_main
  1340  017F  0833               	movf	??_main,w
  1341  0180  00B6               	movwf	main@DIRECTION
  1342  0181                     l2480:
  1343                           
  1344                           ;main.c: 184: BEEP();
  1345  0181  120A  158A  2771  120A  118A  	fcall	_BEEP
  1346  0186                     l2482:
  1347                           
  1348                           ;main.c: 213: };main.c: 214: };main.c: 216: if (!RB1)
  1349  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0188  1886               	btfsc	6,1	;volatile
  1352  0189  298B               	goto	u1871
  1353  018A  298C               	goto	u1870
  1354  018B                     u1871:
  1355  018B  29C0               	goto	l2496
  1356  018C                     u1870:
  1357  018C                     l2484:
  1358                           
  1359                           ;main.c: 217: {;main.c: 218: _delay((unsigned long)((30)*(4000000/4000.0)));
  1360  018C  3027               	movlw	39
  1361  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1362  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1363  018F  00B4               	movwf	??_main+1
  1364  0190  30F4               	movlw	244
  1365  0191  00B3               	movwf	??_main
  1366  0192                     u2197:
  1367  0192  0BB3               	decfsz	??_main,f
  1368  0193  2992               	goto	u2197
  1369  0194  0BB4               	decfsz	??_main+1,f
  1370  0195  2992               	goto	u2197
  1371  0196  0000               	nop
  1372  0197                     l2486:
  1373                           
  1374                           ;main.c: 219: if (!RB1)
  1375  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0199  1886               	btfsc	6,1	;volatile
  1378  019A  299C               	goto	u1881
  1379  019B  299D               	goto	u1880
  1380  019C                     u1881:
  1381  019C  29C0               	goto	l2496
  1382  019D                     u1880:
  1383  019D                     l2488:
  1384                           
  1385                           ;main.c: 220: {;main.c: 222: BEEP();
  1386  019D  120A  158A  2771  120A  118A  	fcall	_BEEP
  1387  01A2                     l2490:
  1388                           
  1389                           ;main.c: 223: PORTC &=~(1<<6);;
  1390  01A2  30BF               	movlw	191
  1391  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1392  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1393  01A5  00B3               	movwf	??_main
  1394  01A6  0833               	movf	??_main,w
  1395  01A7  0587               	andwf	7,f	;volatile
  1396  01A8                     l2492:
  1397                           
  1398                           ;main.c: 224: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1399  01A8  3006               	movlw	6
  1400  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1401  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1402  01AB  00B5               	movwf	??_main+2
  1403  01AC  3013               	movlw	19
  1404  01AD  00B4               	movwf	??_main+1
  1405  01AE  30AD               	movlw	173
  1406  01AF  00B3               	movwf	??_main
  1407  01B0                     u2207:
  1408  01B0  0BB3               	decfsz	??_main,f
  1409  01B1  29B0               	goto	u2207
  1410  01B2  0BB4               	decfsz	??_main+1,f
  1411  01B3  29B0               	goto	u2207
  1412  01B4  0BB5               	decfsz	??_main+2,f
  1413  01B5  29B0               	goto	u2207
  1414  01B6                     l2494:
  1415                           
  1416                           ;main.c: 225: ON_FLAG = DRIL_ON();
  1417  01B6  120A  118A  27E2  120A  118A  	fcall	_DRIL_ON
  1418  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1419  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1420  01BD  00B3               	movwf	??_main
  1421  01BE  0833               	movf	??_main,w
  1422  01BF  00B8               	movwf	main@ON_FLAG
  1423  01C0                     l2496:
  1424                           
  1425                           ;main.c: 227: };main.c: 228: };main.c: 230: if (!RB7)
  1426  01C0  1B86               	btfsc	6,7	;volatile
  1427  01C1  29C3               	goto	u1891
  1428  01C2  29C4               	goto	u1890
  1429  01C3                     u1891:
  1430  01C3  29E4               	goto	l2506
  1431  01C4                     u1890:
  1432  01C4                     l2498:
  1433                           
  1434                           ;main.c: 231: {;main.c: 232: _delay((unsigned long)((30)*(4000000/4000.0)));
  1435  01C4  3027               	movlw	39
  1436  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1437  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1438  01C7  00B4               	movwf	??_main+1
  1439  01C8  30F4               	movlw	244
  1440  01C9  00B3               	movwf	??_main
  1441  01CA                     u2217:
  1442  01CA  0BB3               	decfsz	??_main,f
  1443  01CB  29CA               	goto	u2217
  1444  01CC  0BB4               	decfsz	??_main+1,f
  1445  01CD  29CA               	goto	u2217
  1446  01CE  0000               	nop
  1447  01CF                     l2500:
  1448                           
  1449                           ;main.c: 233: if (!RB7)
  1450  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1451  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1452  01D1  1B86               	btfsc	6,7	;volatile
  1453  01D2  29D4               	goto	u1901
  1454  01D3  29D5               	goto	u1900
  1455  01D4                     u1901:
  1456  01D4  29E4               	goto	l2506
  1457  01D5                     u1900:
  1458  01D5                     l2502:
  1459                           
  1460                           ;main.c: 234: {;main.c: 237: ON_FLAG = DRIL_OFF();
  1461  01D5  120A  158A  278F  120A  118A  	fcall	_DRIL_OFF
  1462  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1463  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1464  01DC  00B3               	movwf	??_main
  1465  01DD  0833               	movf	??_main,w
  1466  01DE  00B8               	movwf	main@ON_FLAG
  1467  01DF                     l2504:
  1468                           
  1469                           ;main.c: 238: BEEP();
  1470  01DF  120A  158A  2771  120A  118A  	fcall	_BEEP
  1471  01E4                     l2506:
  1472                           
  1473                           ;main.c: 242: };main.c: 243: };main.c: 244: if (!RB3)
  1474  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1475  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1476  01E6  1986               	btfsc	6,3	;volatile
  1477  01E7  29E9               	goto	u1911
  1478  01E8  29EA               	goto	u1910
  1479  01E9                     u1911:
  1480  01E9  2A39               	goto	l2530
  1481  01EA                     u1910:
  1482  01EA                     l2508:
  1483                           
  1484                           ;main.c: 245: {;main.c: 246: _delay((unsigned long)((50)*(4000000/4000.0)));
  1485  01EA  3041               	movlw	65
  1486  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1487  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1488  01ED  00B4               	movwf	??_main+1
  1489  01EE  30ED               	movlw	237
  1490  01EF  00B3               	movwf	??_main
  1491  01F0                     u2227:
  1492  01F0  0BB3               	decfsz	??_main,f
  1493  01F1  29F0               	goto	u2227
  1494  01F2  0BB4               	decfsz	??_main+1,f
  1495  01F3  29F0               	goto	u2227
  1496  01F4  29F5               	nop2
  1497  01F5                     l2510:
  1498                           
  1499                           ;main.c: 247: if (!RB3)
  1500  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1501  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1502  01F7  1986               	btfsc	6,3	;volatile
  1503  01F8  29FA               	goto	u1921
  1504  01F9  29FB               	goto	u1920
  1505  01FA                     u1921:
  1506  01FA  2A39               	goto	l2530
  1507  01FB                     u1920:
  1508  01FB                     l2512:
  1509                           
  1510                           ;main.c: 248: {;main.c: 249: PORTC &=~(1<<4);;
  1511  01FB  30EF               	movlw	239
  1512  01FC  00B3               	movwf	??_main
  1513  01FD  0833               	movf	??_main,w
  1514  01FE  0587               	andwf	7,f	;volatile
  1515  01FF                     l2514:
  1516                           
  1517                           ;main.c: 250: BEEP();
  1518  01FF  120A  158A  2771  120A  118A  	fcall	_BEEP
  1519  0204                     l2516:
  1520                           
  1521                           ;main.c: 252: _delay((unsigned long)((100)*(4000000/4000.0)));
  1522  0204  3082               	movlw	130
  1523  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0207  00B4               	movwf	??_main+1
  1526  0208  30DD               	movlw	221
  1527  0209  00B3               	movwf	??_main
  1528  020A                     u2237:
  1529  020A  0BB3               	decfsz	??_main,f
  1530  020B  2A0A               	goto	u2237
  1531  020C  0BB4               	decfsz	??_main+1,f
  1532  020D  2A0A               	goto	u2237
  1533  020E                     l2518:
  1534                           
  1535                           ;main.c: 253: PORTC |=(1<<3);;
  1536  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1537  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0210  1587               	bsf	7,3	;volatile
  1539  0211                     l2520:
  1540                           
  1541                           ;main.c: 255: _delay((unsigned long)((25)*(4000000/4000.0)));
  1542  0211  3021               	movlw	33
  1543  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0214  00B4               	movwf	??_main+1
  1546  0215  3075               	movlw	117
  1547  0216  00B3               	movwf	??_main
  1548  0217                     u2247:
  1549  0217  0BB3               	decfsz	??_main,f
  1550  0218  2A17               	goto	u2247
  1551  0219  0BB4               	decfsz	??_main+1,f
  1552  021A  2A17               	goto	u2247
  1553  021B  2A1C               	nop2
  1554  021C                     l2522:
  1555                           
  1556                           ;main.c: 256: PORTC &=~(1<<3);;
  1557  021C  30F7               	movlw	247
  1558  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1559  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1560  021F  00B3               	movwf	??_main
  1561  0220  0833               	movf	??_main,w
  1562  0221  0587               	andwf	7,f	;volatile
  1563  0222                     l2524:
  1564                           
  1565                           ;main.c: 257: _delay((unsigned long)((25)*(4000000/4000.0)));
  1566  0222  3021               	movlw	33
  1567  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0225  00B4               	movwf	??_main+1
  1570  0226  3075               	movlw	117
  1571  0227  00B3               	movwf	??_main
  1572  0228                     u2257:
  1573  0228  0BB3               	decfsz	??_main,f
  1574  0229  2A28               	goto	u2257
  1575  022A  0BB4               	decfsz	??_main+1,f
  1576  022B  2A28               	goto	u2257
  1577  022C  2A2D               	nop2
  1578  022D                     l2526:
  1579                           
  1580                           ;main.c: 259: if (percent<100)
  1581  022D  3064               	movlw	100
  1582  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1583  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0230  0246               	subwf	_percent,w
  1585  0231  1803               	skipnc
  1586  0232  2A34               	goto	u1931
  1587  0233  2A35               	goto	u1930
  1588  0234                     u1931:
  1589  0234  2A39               	goto	l2530
  1590  0235                     u1930:
  1591  0235                     l2528:
  1592                           
  1593                           ;main.c: 260: {;main.c: 261: percent++;
  1594  0235  3001               	movlw	1
  1595  0236  00B3               	movwf	??_main
  1596  0237  0833               	movf	??_main,w
  1597  0238  07C6               	addwf	_percent,f
  1598  0239                     l2530:
  1599                           
  1600                           ;main.c: 262: };main.c: 264: };main.c: 265: };main.c: 266: if (!RB2)
  1601  0239  1906               	btfsc	6,2	;volatile
  1602  023A  2A3C               	goto	u1941
  1603  023B  2A3D               	goto	u1940
  1604  023C                     u1941:
  1605  023C  2A86               	goto	l2554
  1606  023D                     u1940:
  1607  023D                     l2532:
  1608                           
  1609                           ;main.c: 267: {;main.c: 268: _delay((unsigned long)((50)*(4000000/4000.0)));
  1610  023D  3041               	movlw	65
  1611  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1612  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0240  00B4               	movwf	??_main+1
  1614  0241  30ED               	movlw	237
  1615  0242  00B3               	movwf	??_main
  1616  0243                     u2267:
  1617  0243  0BB3               	decfsz	??_main,f
  1618  0244  2A43               	goto	u2267
  1619  0245  0BB4               	decfsz	??_main+1,f
  1620  0246  2A43               	goto	u2267
  1621  0247  2A48               	nop2
  1622  0248                     l2534:
  1623                           
  1624                           ;main.c: 269: if (!RB2)
  1625  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1627  024A  1906               	btfsc	6,2	;volatile
  1628  024B  2A4D               	goto	u1951
  1629  024C  2A4E               	goto	u1950
  1630  024D                     u1951:
  1631  024D  2A86               	goto	l2554
  1632  024E                     u1950:
  1633  024E                     l2536:
  1634                           
  1635                           ;main.c: 270: {;main.c: 271: PORTC |=(1<<4);;
  1636  024E  1607               	bsf	7,4	;volatile
  1637  024F                     l2538:
  1638                           
  1639                           ;main.c: 272: BEEP();
  1640  024F  120A  158A  2771  120A  118A  	fcall	_BEEP
  1641  0254                     l2540:
  1642                           
  1643                           ;main.c: 274: _delay((unsigned long)((100)*(4000000/4000.0)));
  1644  0254  3082               	movlw	130
  1645  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0257  00B4               	movwf	??_main+1
  1648  0258  30DD               	movlw	221
  1649  0259  00B3               	movwf	??_main
  1650  025A                     u2277:
  1651  025A  0BB3               	decfsz	??_main,f
  1652  025B  2A5A               	goto	u2277
  1653  025C  0BB4               	decfsz	??_main+1,f
  1654  025D  2A5A               	goto	u2277
  1655  025E                     l2542:
  1656                           
  1657                           ;main.c: 275: PORTC |=(1<<3);;
  1658  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1659  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0260  1587               	bsf	7,3	;volatile
  1661  0261                     l2544:
  1662                           
  1663                           ;main.c: 276: _delay((unsigned long)((25)*(4000000/4000.0)));
  1664  0261  3021               	movlw	33
  1665  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0264  00B4               	movwf	??_main+1
  1668  0265  3075               	movlw	117
  1669  0266  00B3               	movwf	??_main
  1670  0267                     u2287:
  1671  0267  0BB3               	decfsz	??_main,f
  1672  0268  2A67               	goto	u2287
  1673  0269  0BB4               	decfsz	??_main+1,f
  1674  026A  2A67               	goto	u2287
  1675  026B  2A6C               	nop2
  1676  026C                     l2546:
  1677                           
  1678                           ;main.c: 277: PORTC &=~(1<<3);;
  1679  026C  30F7               	movlw	247
  1680  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1681  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1682  026F  00B3               	movwf	??_main
  1683  0270  0833               	movf	??_main,w
  1684  0271  0587               	andwf	7,f	;volatile
  1685  0272                     l2548:
  1686                           
  1687                           ;main.c: 278: _delay((unsigned long)((25)*(4000000/4000.0)));
  1688  0272  3021               	movlw	33
  1689  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0275  00B4               	movwf	??_main+1
  1692  0276  3075               	movlw	117
  1693  0277  00B3               	movwf	??_main
  1694  0278                     u2297:
  1695  0278  0BB3               	decfsz	??_main,f
  1696  0279  2A78               	goto	u2297
  1697  027A  0BB4               	decfsz	??_main+1,f
  1698  027B  2A78               	goto	u2297
  1699  027C  2A7D               	nop2
  1700  027D                     l2550:
  1701                           
  1702                           ;main.c: 280: if (percent>0)
  1703  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1704  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1705  027F  0846               	movf	_percent,w
  1706  0280  1903               	btfsc	3,2
  1707  0281  2A83               	goto	u1961
  1708  0282  2A84               	goto	u1960
  1709  0283                     u1961:
  1710  0283  2A86               	goto	l2554
  1711  0284                     u1960:
  1712  0284                     l2552:
  1713                           
  1714                           ;main.c: 281: {;main.c: 283: percent--;
  1715  0284  3001               	movlw	1
  1716  0285  02C6               	subwf	_percent,f
  1717  0286                     l2554:
  1718                           
  1719                           ;main.c: 284: };main.c: 286: };main.c: 287: };main.c: 288: if ((CheckTAPPING())&&(!ON_FL
      +                          AG))
  1720  0286  120A  158A  27E1  120A  118A  	fcall	_CheckTAPPING
  1721  028B  3A00               	xorlw	0
  1722  028C  1903               	skipnz
  1723  028D  2A8F               	goto	u1971
  1724  028E  2A90               	goto	u1970
  1725  028F                     u1971:
  1726  028F  2AC4               	goto	l2576
  1727  0290                     u1970:
  1728  0290                     l2556:
  1729  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0292  0838               	movf	main@ON_FLAG,w
  1732  0293  1D03               	btfss	3,2
  1733  0294  2A96               	goto	u1981
  1734  0295  2A97               	goto	u1980
  1735  0296                     u1981:
  1736  0296  2AC4               	goto	l2576
  1737  0297                     u1980:
  1738  0297                     l2558:
  1739                           
  1740                           ;main.c: 289: {;main.c: 290: BEEP();
  1741  0297  120A  158A  2771  120A  118A  	fcall	_BEEP
  1742  029C                     l2560:
  1743                           
  1744                           ;main.c: 292: LCDGotoXY(13,1);
  1745  029C  01F6               	clrf	LCDGotoXY@y
  1746  029D  0AF6               	incf	LCDGotoXY@y,f
  1747  029E  300D               	movlw	13
  1748  029F  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  1749  02A4                     l2562:
  1750                           
  1751                           ;main.c: 293: if (flag_tapping == 0)
  1752  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1753  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1754  02A6  0837               	movf	main@flag_tapping,w
  1755  02A7  1D03               	btfss	3,2
  1756  02A8  2AAA               	goto	u1991
  1757  02A9  2AAB               	goto	u1990
  1758  02AA                     u1991:
  1759  02AA  2ABA               	goto	l2570
  1760  02AB                     u1990:
  1761  02AB                     l2564:
  1762                           
  1763                           ;main.c: 294: {;main.c: 295: LCDWriteString(Tapping);
  1764  02AB  301C               	movlw	(low ((_Tapping-__stringbase)| (0+32768)))& (0+255)
  1765  02AC  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  1766  02B1                     l2566:
  1767                           
  1768                           ;main.c: 296: PORTC &=~(1<<0);;
  1769  02B1  30FE               	movlw	254
  1770  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1771  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1772  02B4  00B3               	movwf	??_main
  1773  02B5  0833               	movf	??_main,w
  1774  02B6  0587               	andwf	7,f	;volatile
  1775  02B7                     l2568:
  1776                           
  1777                           ;main.c: 297: flag_tapping = 1;
  1778  02B7  01B7               	clrf	main@flag_tapping
  1779  02B8  0AB7               	incf	main@flag_tapping,f
  1780                           
  1781                           ;main.c: 298: }
  1782  02B9  2AC4               	goto	l2576
  1783  02BA                     l2570:
  1784                           
  1785                           ;main.c: 299: else;main.c: 300: {;main.c: 301: LCDWriteString("rpm");
  1786  02BA  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1787  02BB  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  1788  02C0                     l2572:
  1789                           
  1790                           ;main.c: 303: PORTC |=(1<<0);;
  1791  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1792  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1793  02C2  1407               	bsf	7,0	;volatile
  1794  02C3                     l2574:
  1795                           
  1796                           ;main.c: 304: flag_tapping = 0;
  1797  02C3  01B7               	clrf	main@flag_tapping
  1798  02C4                     l2576:
  1799                           
  1800                           ;main.c: 305: };main.c: 308: };main.c: 311: if ((flag_tapping)&&(!RC7)&&(ON_FLAG))
  1801  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1802  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1803  02C6  0837               	movf	main@flag_tapping,w
  1804  02C7  1903               	btfsc	3,2
  1805  02C8  2ACA               	goto	u2001
  1806  02C9  2ACB               	goto	u2000
  1807  02CA                     u2001:
  1808  02CA  2B31               	goto	l2602
  1809  02CB                     u2000:
  1810  02CB                     l2578:
  1811  02CB  1B87               	btfsc	7,7	;volatile
  1812  02CC  2ACE               	goto	u2011
  1813  02CD  2ACF               	goto	u2010
  1814  02CE                     u2011:
  1815  02CE  2B31               	goto	l2602
  1816  02CF                     u2010:
  1817  02CF                     l2580:
  1818  02CF  0838               	movf	main@ON_FLAG,w
  1819  02D0  1903               	btfsc	3,2
  1820  02D1  2AD3               	goto	u2021
  1821  02D2  2AD4               	goto	u2020
  1822  02D3                     u2021:
  1823  02D3  2B31               	goto	l2602
  1824  02D4                     u2020:
  1825  02D4                     l2582:
  1826                           
  1827                           ;main.c: 312: {;main.c: 316: BEEP();
  1828  02D4  120A  158A  2771  120A  118A  	fcall	_BEEP
  1829  02D9                     l2584:
  1830  02D9  120A  158A  278F  120A  118A  	fcall	_DRIL_OFF
  1831  02DE                     l2586:
  1832                           
  1833                           ;main.c: 319: _delay((unsigned long)((2700)*(4000000/4000.0)));
  1834  02DE  300E               	movlw	14
  1835  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1836  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1837  02E1  00B5               	movwf	??_main+2
  1838  02E2  30B3               	movlw	179
  1839  02E3  00B4               	movwf	??_main+1
  1840  02E4  3072               	movlw	114
  1841  02E5  00B3               	movwf	??_main
  1842  02E6                     u2307:
  1843  02E6  0BB3               	decfsz	??_main,f
  1844  02E7  2AE6               	goto	u2307
  1845  02E8  0BB4               	decfsz	??_main+1,f
  1846  02E9  2AE6               	goto	u2307
  1847  02EA  0BB5               	decfsz	??_main+2,f
  1848  02EB  2AE6               	goto	u2307
  1849  02EC  0000               	nop
  1850  02ED                     l2588:
  1851                           
  1852                           ;main.c: 320: BEEP1();
  1853  02ED  120A  158A  27CA  120A  118A  	fcall	_BEEP1
  1854  02F2                     l2590:
  1855                           
  1856                           ;main.c: 321: _delay((unsigned long)((200)*(4000000/4000.0)));
  1857  02F2  3002               	movlw	2
  1858  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1859  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1860  02F5  00B5               	movwf	??_main+2
  1861  02F6  3004               	movlw	4
  1862  02F7  00B4               	movwf	??_main+1
  1863  02F8  30B9               	movlw	185
  1864  02F9  00B3               	movwf	??_main
  1865  02FA                     u2317:
  1866  02FA  0BB3               	decfsz	??_main,f
  1867  02FB  2AFA               	goto	u2317
  1868  02FC  0BB4               	decfsz	??_main+1,f
  1869  02FD  2AFA               	goto	u2317
  1870  02FE  0BB5               	decfsz	??_main+2,f
  1871  02FF  2AFA               	goto	u2317
  1872  0300  2B01               	nop2
  1873  0301                     l2592:
  1874                           
  1875                           ;main.c: 322: if (DIRECTION == 0) DIRECTION = Reverse();
  1876  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0303  0836               	movf	main@DIRECTION,w
  1879  0304  1D03               	btfss	3,2
  1880  0305  2B07               	goto	u2031
  1881  0306  2B08               	goto	u2030
  1882  0307                     u2031:
  1883  0307  2B13               	goto	l2596
  1884  0308                     u2030:
  1885  0308                     l2594:
  1886  0308  120A  158A  277D  120A  118A  	fcall	_Reverse
  1887  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1888  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1889  030F  00B3               	movwf	??_main
  1890  0310  0833               	movf	??_main,w
  1891  0311  00B6               	movwf	main@DIRECTION
  1892  0312  2B1D               	goto	l2598
  1893  0313                     l2596:
  1894                           
  1895                           ;main.c: 323: else DIRECTION = Forward();
  1896  0313  120A  158A  27B5  120A  118A  	fcall	_Forward
  1897  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1899  031A  00B3               	movwf	??_main
  1900  031B  0833               	movf	??_main,w
  1901  031C  00B6               	movwf	main@DIRECTION
  1902  031D                     l2598:
  1903                           
  1904                           ;main.c: 324: _delay((unsigned long)((100)*(4000000/4000.0)));
  1905  031D  3082               	movlw	130
  1906  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1907  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0320  00B4               	movwf	??_main+1
  1909  0321  30DD               	movlw	221
  1910  0322  00B3               	movwf	??_main
  1911  0323                     u2327:
  1912  0323  0BB3               	decfsz	??_main,f
  1913  0324  2B23               	goto	u2327
  1914  0325  0BB4               	decfsz	??_main+1,f
  1915  0326  2B23               	goto	u2327
  1916  0327                     l2600:
  1917                           
  1918                           ;main.c: 325: ON_FLAG = DRIL_ON();
  1919  0327  120A  118A  27E2  120A  118A  	fcall	_DRIL_ON
  1920  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1921  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1922  032E  00B3               	movwf	??_main
  1923  032F  0833               	movf	??_main,w
  1924  0330  00B8               	movwf	main@ON_FLAG
  1925  0331                     l2602:
  1926                           
  1927                           ;main.c: 327: };main.c: 330: LCDGotoXY(13,0);
  1928  0331  01F6               	clrf	LCDGotoXY@y
  1929  0332  300D               	movlw	13
  1930  0333  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  1931  0338                     l2604:
  1932                           
  1933                           ;main.c: 332: if (percent < 10)
  1934  0338  300A               	movlw	10
  1935  0339  1283               	bcf	3,5	;RP0=0, select bank0
  1936  033A  1303               	bcf	3,6	;RP1=0, select bank0
  1937  033B  0246               	subwf	_percent,w
  1938  033C  1803               	skipnc
  1939  033D  2B3F               	goto	u2041
  1940  033E  2B40               	goto	u2040
  1941  033F                     u2041:
  1942  033F  2B57               	goto	l2610
  1943  0340                     u2040:
  1944  0340                     l2606:
  1945                           
  1946                           ;main.c: 333: {;main.c: 334: LCDWriteString("  ");
  1947  0340  3027               	movlw	(low (((STR_6+1)-__stringbase)| (0+32768)))& (0+255)
  1948  0341  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  1949  0346                     l2608:
  1950                           
  1951                           ;main.c: 335: LCDWriteInt(percent,1);
  1952  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1953  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1954  0348  0846               	movf	_percent,w
  1955  0349  00B3               	movwf	??_main
  1956  034A  01B4               	clrf	??_main+1
  1957  034B  0833               	movf	??_main,w
  1958  034C  00A4               	movwf	LCDWriteInt@val
  1959  034D  0834               	movf	??_main+1,w
  1960  034E  00A5               	movwf	LCDWriteInt@val+1
  1961  034F  01A6               	clrf	LCDWriteInt@field_length
  1962  0350  0AA6               	incf	LCDWriteInt@field_length,f
  1963  0351  120A  118A  2445  120A  118A  	fcall	_LCDWriteInt
  1964                           
  1965                           ;main.c: 336: }
  1966  0356  2B86               	goto	l2618
  1967  0357                     l2610:
  1968                           
  1969                           ;main.c: 337: else if (percent < 100)
  1970  0357  3064               	movlw	100
  1971  0358  0246               	subwf	_percent,w
  1972  0359  1803               	skipnc
  1973  035A  2B5C               	goto	u2051
  1974  035B  2B5D               	goto	u2050
  1975  035C                     u2051:
  1976  035C  2B76               	goto	l2616
  1977  035D                     u2050:
  1978  035D                     l2612:
  1979                           
  1980                           ;main.c: 338: {;main.c: 339: LCDWriteString(" ");
  1981  035D  3028               	movlw	(low (((STR_6+2)-__stringbase)| (0+32768)))& (0+255)
  1982  035E  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  1983  0363                     l2614:
  1984                           
  1985                           ;main.c: 340: LCDWriteInt(percent,2);
  1986  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0365  0846               	movf	_percent,w
  1989  0366  00B3               	movwf	??_main
  1990  0367  01B4               	clrf	??_main+1
  1991  0368  0833               	movf	??_main,w
  1992  0369  00A4               	movwf	LCDWriteInt@val
  1993  036A  0834               	movf	??_main+1,w
  1994  036B  00A5               	movwf	LCDWriteInt@val+1
  1995  036C  3002               	movlw	2
  1996  036D  00B5               	movwf	??_main+2
  1997  036E  0835               	movf	??_main+2,w
  1998  036F  00A6               	movwf	LCDWriteInt@field_length
  1999  0370  120A  118A  2445  120A  118A  	fcall	_LCDWriteInt
  2000                           
  2001                           ;main.c: 341: }
  2002  0375  2B86               	goto	l2618
  2003  0376                     l2616:
  2004                           
  2005                           ;main.c: 342: else LCDWriteInt(percent,3);
  2006  0376  0846               	movf	_percent,w
  2007  0377  00B3               	movwf	??_main
  2008  0378  01B4               	clrf	??_main+1
  2009  0379  0833               	movf	??_main,w
  2010  037A  00A4               	movwf	LCDWriteInt@val
  2011  037B  0834               	movf	??_main+1,w
  2012  037C  00A5               	movwf	LCDWriteInt@val+1
  2013  037D  3003               	movlw	3
  2014  037E  00B5               	movwf	??_main+2
  2015  037F  0835               	movf	??_main+2,w
  2016  0380  00A6               	movwf	LCDWriteInt@field_length
  2017  0381  120A  118A  2445  120A  118A  	fcall	_LCDWriteInt
  2018  0386                     l2618:
  2019                           
  2020                           ;main.c: 345: LCDGotoXY(7,1);
  2021  0386  01F6               	clrf	LCDGotoXY@y
  2022  0387  0AF6               	incf	LCDGotoXY@y,f
  2023  0388  3007               	movlw	7
  2024  0389  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  2025  038E                     l2620:
  2026                           
  2027                           ;main.c: 347: if (flag_timer1)
  2028  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2029  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0390  0844               	movf	_flag_timer1,w
  2031  0391  0445               	iorwf	_flag_timer1+1,w
  2032  0392  1903               	btfsc	3,2
  2033  0393  2B95               	goto	u2061
  2034  0394  2B96               	goto	u2060
  2035  0395                     u2061:
  2036  0395  2932               	goto	l2458
  2037  0396                     u2060:
  2038  0396                     l2622:
  2039                           
  2040                           ;main.c: 348: {;main.c: 349: RPM_count = (count*count_Hz*minute)/Magn_count;
  2041  0396  1003               	clrc
  2042  0397  0D42               	rlf	_count,w
  2043  0398  00F3               	movwf	___wmul@multiplier
  2044  0399  0D43               	rlf	_count+1,w
  2045  039A  00F4               	movwf	___wmul@multiplier+1
  2046  039B  303C               	movlw	60
  2047  039C  00F5               	movwf	___wmul@multiplicand
  2048  039D  3000               	movlw	0
  2049  039E  00F6               	movwf	___wmul@multiplicand+1
  2050  039F  120A  118A  27B7  120A  118A  	fcall	___wmul
  2051  03A4  0873               	movf	?___wmul,w
  2052  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2053  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2054  03A7  00B3               	movwf	??_main
  2055  03A8  0874               	movf	?___wmul+1,w
  2056  03A9  00B4               	movwf	??_main+1
  2057  03AA  1003               	clrc
  2058  03AB  0CB4               	rrf	??_main+1,f
  2059  03AC  0CB3               	rrf	??_main,f
  2060  03AD  1003               	clrc
  2061  03AE  0CB4               	rrf	??_main+1,f
  2062  03AF  0CB3               	rrf	??_main,f
  2063  03B0  1003               	clrc
  2064  03B1  0CB4               	rrf	??_main+1,f
  2065  03B2  0CB3               	rrf	??_main,f
  2066  03B3  0833               	movf	??_main,w
  2067  03B4  00B9               	movwf	main@RPM_count
  2068  03B5  0834               	movf	??_main+1,w
  2069  03B6  00BA               	movwf	main@RPM_count+1
  2070  03B7                     l2624:
  2071                           
  2072                           ;main.c: 351: if (RPM_count < 10)
  2073  03B7  3000               	movlw	0
  2074  03B8  023A               	subwf	main@RPM_count+1,w
  2075  03B9  300A               	movlw	10
  2076  03BA  1903               	skipnz
  2077  03BB  0239               	subwf	main@RPM_count,w
  2078  03BC  1803               	skipnc
  2079  03BD  2BBF               	goto	u2071
  2080  03BE  2BC0               	goto	u2070
  2081  03BF                     u2071:
  2082  03BF  2BDC               	goto	l2630
  2083  03C0                     u2070:
  2084  03C0                     l2626:
  2085                           
  2086                           ;main.c: 352: {;main.c: 354: LCDWriteString("   ");
  2087  03C0  3026               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2088  03C1  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  2089                           
  2090                           ;main.c: 355: LCDGotoXY(10,1);
  2091  03C6  01F6               	clrf	LCDGotoXY@y
  2092  03C7  0AF6               	incf	LCDGotoXY@y,f
  2093  03C8  300A               	movlw	10
  2094  03C9  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  2095  03CE                     l2628:
  2096                           
  2097                           ;main.c: 356: LCDWriteInt(RPM_count,1);
  2098  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2099  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2100  03D0  083A               	movf	main@RPM_count+1,w
  2101  03D1  00A5               	movwf	LCDWriteInt@val+1
  2102  03D2  0839               	movf	main@RPM_count,w
  2103  03D3  00A4               	movwf	LCDWriteInt@val
  2104  03D4  01A6               	clrf	LCDWriteInt@field_length
  2105  03D5  0AA6               	incf	LCDWriteInt@field_length,f
  2106  03D6  120A  118A  2445  120A  118A  	fcall	_LCDWriteInt
  2107                           
  2108                           ;main.c: 357: }
  2109  03DB  2C37               	goto	l2644
  2110  03DC                     l2630:
  2111                           
  2112                           ;main.c: 358: else if (RPM_count < 100)
  2113  03DC  3000               	movlw	0
  2114  03DD  023A               	subwf	main@RPM_count+1,w
  2115  03DE  3064               	movlw	100
  2116  03DF  1903               	skipnz
  2117  03E0  0239               	subwf	main@RPM_count,w
  2118  03E1  1803               	skipnc
  2119  03E2  2BE4               	goto	u2081
  2120  03E3  2BE5               	goto	u2080
  2121  03E4                     u2081:
  2122  03E4  2C03               	goto	l2636
  2123  03E5                     u2080:
  2124  03E5                     l2632:
  2125                           
  2126                           ;main.c: 359: {;main.c: 361: LCDWriteString("  ");
  2127  03E5  3027               	movlw	(low (((STR_6+1)-__stringbase)| (0+32768)))& (0+255)
  2128  03E6  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  2129                           
  2130                           ;main.c: 362: LCDGotoXY(9,1);
  2131  03EB  01F6               	clrf	LCDGotoXY@y
  2132  03EC  0AF6               	incf	LCDGotoXY@y,f
  2133  03ED  3009               	movlw	9
  2134  03EE  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  2135  03F3                     l2634:
  2136                           
  2137                           ;main.c: 363: LCDWriteInt(RPM_count,2);
  2138  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2139  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2140  03F5  083A               	movf	main@RPM_count+1,w
  2141  03F6  00A5               	movwf	LCDWriteInt@val+1
  2142  03F7  0839               	movf	main@RPM_count,w
  2143  03F8  00A4               	movwf	LCDWriteInt@val
  2144  03F9  3002               	movlw	2
  2145  03FA  00B3               	movwf	??_main
  2146  03FB  0833               	movf	??_main,w
  2147  03FC  00A6               	movwf	LCDWriteInt@field_length
  2148  03FD  120A  118A  2445  120A  118A  	fcall	_LCDWriteInt
  2149                           
  2150                           ;main.c: 364: }
  2151  0402  2C37               	goto	l2644
  2152  0403                     l2636:
  2153                           
  2154                           ;main.c: 365: else if (RPM_count < 1000)
  2155  0403  3003               	movlw	3
  2156  0404  023A               	subwf	main@RPM_count+1,w
  2157  0405  30E8               	movlw	232
  2158  0406  1903               	skipnz
  2159  0407  0239               	subwf	main@RPM_count,w
  2160  0408  1803               	skipnc
  2161  0409  2C0B               	goto	u2091
  2162  040A  2C0C               	goto	u2090
  2163  040B                     u2091:
  2164  040B  2C2A               	goto	l2642
  2165  040C                     u2090:
  2166  040C                     l2638:
  2167                           
  2168                           ;main.c: 366: {;main.c: 368: LCDWriteString(" ");
  2169  040C  3028               	movlw	(low (((STR_6+2)-__stringbase)| (0+32768)))& (0+255)
  2170  040D  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  2171                           
  2172                           ;main.c: 369: LCDGotoXY(8,1);
  2173  0412  01F6               	clrf	LCDGotoXY@y
  2174  0413  0AF6               	incf	LCDGotoXY@y,f
  2175  0414  3008               	movlw	8
  2176  0415  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  2177  041A                     l2640:
  2178                           
  2179                           ;main.c: 370: LCDWriteInt(RPM_count,3);
  2180  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2181  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2182  041C  083A               	movf	main@RPM_count+1,w
  2183  041D  00A5               	movwf	LCDWriteInt@val+1
  2184  041E  0839               	movf	main@RPM_count,w
  2185  041F  00A4               	movwf	LCDWriteInt@val
  2186  0420  3003               	movlw	3
  2187  0421  00B3               	movwf	??_main
  2188  0422  0833               	movf	??_main,w
  2189  0423  00A6               	movwf	LCDWriteInt@field_length
  2190  0424  120A  118A  2445  120A  118A  	fcall	_LCDWriteInt
  2191                           
  2192                           ;main.c: 371: }
  2193  0429  2C37               	goto	l2644
  2194  042A                     l2642:
  2195                           
  2196                           ;main.c: 372: else;main.c: 373: {;main.c: 375: LCDWriteInt(RPM_count,4);
  2197  042A  083A               	movf	main@RPM_count+1,w
  2198  042B  00A5               	movwf	LCDWriteInt@val+1
  2199  042C  0839               	movf	main@RPM_count,w
  2200  042D  00A4               	movwf	LCDWriteInt@val
  2201  042E  3004               	movlw	4
  2202  042F  00B3               	movwf	??_main
  2203  0430  0833               	movf	??_main,w
  2204  0431  00A6               	movwf	LCDWriteInt@field_length
  2205  0432  120A  118A  2445  120A  118A  	fcall	_LCDWriteInt
  2206  0437                     l2644:
  2207                           
  2208                           ;main.c: 376: };main.c: 378: flag_timer1 = 0;
  2209  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0439  01C4               	clrf	_flag_timer1
  2212  043A  01C5               	clrf	_flag_timer1+1
  2213  043B                     l2646:
  2214                           
  2215                           ;main.c: 379: count = 0;
  2216  043B  01C2               	clrf	_count
  2217  043C  01C3               	clrf	_count+1
  2218  043D                     l2648:
  2219                           
  2220                           ;main.c: 380: TMR1L=0xDC;
  2221  043D  30DC               	movlw	220
  2222  043E  008E               	movwf	14	;volatile
  2223  043F                     l2650:
  2224                           
  2225                           ;main.c: 381: TMR1H=0xB;
  2226  043F  300B               	movlw	11
  2227  0440  008F               	movwf	15	;volatile
  2228  0441  2932               	goto	l2458
  2229  0442  120A  118A  280C   	ljmp	start
  2230  0445                     __end_of_main:
  2231                           
  2232                           	psect	text1
  2233  07B7                     __ptext1:	
  2234 ;; *************** function ___wmul *****************
  2235 ;; Defined at:
  2236 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  multiplier      2    3[COMMON] unsigned int 
  2239 ;;  multiplicand    2    5[COMMON] unsigned int 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  product         2    0[BANK0 ] unsigned int 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2    3[COMMON] unsigned int 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         4       0       0       0       0
  2252 ;;      Locals:         0       2       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         4       2       0       0       0
  2255 ;;Total ram usage:        6 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function ___wmul
  2267  07B7                     ___wmul:
  2268  07B7                     l2360:	
  2269                           ;incstack = 0
  2270                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2271                           
  2272  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  2273  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  2274  07B9  01A0               	clrf	___wmul@product
  2275  07BA  01A1               	clrf	___wmul@product+1
  2276  07BB                     l2362:
  2277  07BB  1C73               	btfss	___wmul@multiplier,0
  2278  07BC  2FBE               	goto	u1771
  2279  07BD  2FBF               	goto	u1770
  2280  07BE                     u1771:
  2281  07BE  2FC7               	goto	l356
  2282  07BF                     u1770:
  2283  07BF                     l2364:
  2284  07BF  0875               	movf	___wmul@multiplicand,w
  2285  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  2286  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  2287  07C2  07A0               	addwf	___wmul@product,f
  2288  07C3  1803               	skipnc
  2289  07C4  0AA1               	incf	___wmul@product+1,f
  2290  07C5  0876               	movf	___wmul@multiplicand+1,w
  2291  07C6  07A1               	addwf	___wmul@product+1,f
  2292  07C7                     l356:
  2293  07C7  3001               	movlw	1
  2294  07C8                     u1785:
  2295  07C8  1003               	clrc
  2296  07C9  0DF5               	rlf	___wmul@multiplicand,f
  2297  07CA  0DF6               	rlf	___wmul@multiplicand+1,f
  2298  07CB  3EFF               	addlw	-1
  2299  07CC  1D03               	skipz
  2300  07CD  2FC8               	goto	u1785
  2301  07CE                     l2366:
  2302  07CE  3001               	movlw	1
  2303  07CF                     u1795:
  2304  07CF  1003               	clrc
  2305  07D0  0CF4               	rrf	___wmul@multiplier+1,f
  2306  07D1  0CF3               	rrf	___wmul@multiplier,f
  2307  07D2  3EFF               	addlw	-1
  2308  07D3  1D03               	skipz
  2309  07D4  2FCF               	goto	u1795
  2310  07D5                     l2368:
  2311  07D5  0873               	movf	___wmul@multiplier,w
  2312  07D6  0474               	iorwf	___wmul@multiplier+1,w
  2313  07D7  1D03               	btfss	3,2
  2314  07D8  2FDA               	goto	u1801
  2315  07D9  2FDB               	goto	u1800
  2316  07DA                     u1801:
  2317  07DA  2FBB               	goto	l2362
  2318  07DB                     u1800:
  2319  07DB                     l2370:
  2320  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  2321  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  2322  07DD  0821               	movf	___wmul@product+1,w
  2323  07DE  00F4               	movwf	?___wmul+1
  2324  07DF  0820               	movf	___wmul@product,w
  2325  07E0  00F3               	movwf	?___wmul
  2326  07E1                     l358:
  2327  07E1  0008               	return
  2328  07E2                     __end_of___wmul:
  2329                           
  2330                           	psect	text2
  2331  0F7D                     __ptext2:	
  2332 ;; *************** function _Reverse *****************
  2333 ;; Defined at:
  2334 ;;		line 410 in file "main.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      unsigned char 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0
  2351 ;;      Totals:         0       0       0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    3
  2355 ;; This function calls:
  2356 ;;		_LCDGotoXY
  2357 ;;		_LCDWriteString
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function _Reverse
  2365  0F7D                     _Reverse:
  2366  0F7D                     l2294:	
  2367                           ;incstack = 0
  2368                           ; Regs used in _Reverse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2369                           
  2370                           
  2371                           ;main.c: 413: LCDGotoXY(0,0);
  2372  0F7D  01F6               	clrf	LCDGotoXY@y
  2373  0F7E  3000               	movlw	0
  2374  0F7F  120A  118A  278A  120A  158A  	fcall	_LCDGotoXY
  2375                           
  2376                           ;main.c: 414: LCDWriteString(Reverse_);
  2377  0F84  3004               	movlw	(low ((_Reverse_-__stringbase)| (0+32768)))& (0+255)
  2378  0F85  120A  118A  255C  120A  158A  	fcall	_LCDWriteString
  2379  0F8A                     l2296:
  2380                           
  2381                           ;main.c: 416: PORTC |=(1<<2);;
  2382  0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0F8C  1507               	bsf	7,2	;volatile
  2385  0F8D                     l2298:
  2386                           
  2387                           ;main.c: 418: return 1;
  2388  0F8D  3001               	movlw	1
  2389  0F8E                     l174:
  2390  0F8E  0008               	return
  2391  0F8F                     __end_of_Reverse:
  2392                           
  2393                           	psect	text3
  2394  0445                     __ptext3:	
  2395 ;; *************** function _LCDWriteInt *****************
  2396 ;; Defined at:
  2397 ;;		line 322 in file "lcd_hd44780_pic16.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  val             2    4[BANK0 ] int 
  2400 ;;  field_length    1    6[BANK0 ] char 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  str             5   10[BANK0 ] unsigned char [5]
  2403 ;;  i               2   17[BANK0 ] int 
  2404 ;;  j               2   15[BANK0 ] int 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         0       3       0       0       0
  2415 ;;      Locals:         0       9       0       0       0
  2416 ;;      Temps:          0       3       0       0       0
  2417 ;;      Totals:         0      15       0       0       0
  2418 ;;Total ram usage:       15 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    2
  2421 ;; This function calls:
  2422 ;;		_LCDByte
  2423 ;;		___awdiv
  2424 ;;		___awmod
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           
  2431                           ;psect for function _LCDWriteInt
  2432  0445                     _LCDWriteInt:
  2433  0445                     l2320:	
  2434                           ;incstack = 0
  2435                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2436                           
  2437                           
  2438                           ;lcd_hd44780_pic16.c: 335: char str[5]={0,0,0,0,0};
  2439  0445  302A               	movlw	LCDWriteInt@str& (0+255)
  2440  0446  0084               	movwf	4
  2441  0447  3005               	movlw	5
  2442  0448  00FF               	movwf	btemp+1
  2443  0449                     u1710:
  2444  0449  1383               	bcf	3,7	;select IRP bank0
  2445  044A  0180               	clrf	0
  2446  044B  0A84               	incf	4,f
  2447  044C  0BFF               	decfsz	btemp+1,f
  2448  044D  2C49               	goto	u1710
  2449  044E                     l2322:
  2450                           
  2451                           ;lcd_hd44780_pic16.c: 336: int i=4,j=0;
  2452  044E  3004               	movlw	4
  2453  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0451  00B1               	movwf	LCDWriteInt@i
  2456  0452  3000               	movlw	0
  2457  0453  00B2               	movwf	LCDWriteInt@i+1
  2458  0454                     l2324:
  2459  0454  01AF               	clrf	LCDWriteInt@j
  2460  0455  01B0               	clrf	LCDWriteInt@j+1
  2461  0456                     l2326:
  2462                           
  2463                           ;lcd_hd44780_pic16.c: 339: if(val<0)
  2464  0456  1FA5               	btfss	LCDWriteInt@val+1,7
  2465  0457  2C59               	goto	u1721
  2466  0458  2C5A               	goto	u1720
  2467  0459                     u1721:
  2468  0459  2C9A               	goto	l2338
  2469  045A                     u1720:
  2470  045A                     l2328:
  2471                           
  2472                           ;lcd_hd44780_pic16.c: 340: {;lcd_hd44780_pic16.c: 341: (LCDByte('-',1));
  2473  045A  01F3               	clrf	LCDByte@isdata
  2474  045B  0AF3               	incf	LCDByte@isdata,f
  2475  045C  302D               	movlw	45
  2476  045D  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  2477  0462                     l2330:
  2478                           
  2479                           ;lcd_hd44780_pic16.c: 342: val=val*-1;
  2480  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0464  09A4               	comf	LCDWriteInt@val,f
  2483  0465  09A5               	comf	LCDWriteInt@val+1,f
  2484  0466  0AA4               	incf	LCDWriteInt@val,f
  2485  0467  1903               	skipnz
  2486  0468  0AA5               	incf	LCDWriteInt@val+1,f
  2487  0469  2C9A               	goto	l2338
  2488  046A                     l2332:
  2489                           
  2490                           ;lcd_hd44780_pic16.c: 346: {;lcd_hd44780_pic16.c: 347: str[i]=val%10;
  2491  046A  300A               	movlw	10
  2492  046B  00F3               	movwf	___awmod@divisor
  2493  046C  3000               	movlw	0
  2494  046D  00F4               	movwf	___awmod@divisor+1
  2495  046E  0825               	movf	LCDWriteInt@val+1,w
  2496  046F  00F6               	movwf	___awmod@dividend+1
  2497  0470  0824               	movf	LCDWriteInt@val,w
  2498  0471  00F5               	movwf	___awmod@dividend
  2499  0472  120A  118A  2632  120A  118A  	fcall	___awmod
  2500  0477  0873               	movf	?___awmod,w
  2501  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2503  047A  00A7               	movwf	??_LCDWriteInt
  2504  047B  0831               	movf	LCDWriteInt@i,w
  2505  047C  3E2A               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2506  047D  0084               	movwf	4
  2507  047E  0827               	movf	??_LCDWriteInt,w
  2508  047F  1383               	bcf	3,7	;select IRP bank0
  2509  0480  0080               	movwf	0
  2510  0481                     l2334:
  2511                           
  2512                           ;lcd_hd44780_pic16.c: 348: val=val/10;
  2513  0481  300A               	movlw	10
  2514  0482  00F3               	movwf	___awdiv@divisor
  2515  0483  3000               	movlw	0
  2516  0484  00F4               	movwf	___awdiv@divisor+1
  2517  0485  0825               	movf	LCDWriteInt@val+1,w
  2518  0486  00F6               	movwf	___awdiv@dividend+1
  2519  0487  0824               	movf	LCDWriteInt@val,w
  2520  0488  00F5               	movwf	___awdiv@dividend
  2521  0489  120A  118A  25C9  120A  118A  	fcall	___awdiv
  2522  048E  0874               	movf	?___awdiv+1,w
  2523  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0491  00A5               	movwf	LCDWriteInt@val+1
  2526  0492  0873               	movf	?___awdiv,w
  2527  0493  00A4               	movwf	LCDWriteInt@val
  2528  0494                     l2336:
  2529                           
  2530                           ;lcd_hd44780_pic16.c: 349: i--;
  2531  0494  30FF               	movlw	255
  2532  0495  07B1               	addwf	LCDWriteInt@i,f
  2533  0496  1803               	skipnc
  2534  0497  0AB2               	incf	LCDWriteInt@i+1,f
  2535  0498  30FF               	movlw	255
  2536  0499  07B2               	addwf	LCDWriteInt@i+1,f
  2537  049A                     l2338:
  2538  049A  0824               	movf	LCDWriteInt@val,w
  2539  049B  0425               	iorwf	LCDWriteInt@val+1,w
  2540  049C  1D03               	btfss	3,2
  2541  049D  2C9F               	goto	u1731
  2542  049E  2CA0               	goto	u1730
  2543  049F                     u1731:
  2544  049F  2C6A               	goto	l2332
  2545  04A0                     u1730:
  2546  04A0                     l2340:
  2547                           
  2548                           ;lcd_hd44780_pic16.c: 350: };lcd_hd44780_pic16.c: 351: if(field_length==-1)
  2549  04A0  0A26               	incf	LCDWriteInt@field_length,w
  2550  04A1  1D03               	btfss	3,2
  2551  04A2  2CA4               	goto	u1741
  2552  04A3  2CA5               	goto	u1740
  2553  04A4                     u1741:
  2554  04A4  2CB6               	goto	l2348
  2555  04A5                     u1740:
  2556  04A5  2CAC               	goto	l2346
  2557  04A6                     l2344:
  2558  04A6  3001               	movlw	1
  2559  04A7  07AF               	addwf	LCDWriteInt@j,f
  2560  04A8  1803               	skipnc
  2561  04A9  0AB0               	incf	LCDWriteInt@j+1,f
  2562  04AA  3000               	movlw	0
  2563  04AB  07B0               	addwf	LCDWriteInt@j+1,f
  2564  04AC                     l2346:
  2565  04AC  082F               	movf	LCDWriteInt@j,w
  2566  04AD  3E2A               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2567  04AE  0084               	movwf	4
  2568  04AF  1383               	bcf	3,7	;select IRP bank0
  2569  04B0  0800               	movf	0,w
  2570  04B1  1903               	btfsc	3,2
  2571  04B2  2CB4               	goto	u1751
  2572  04B3  2CB5               	goto	u1750
  2573  04B4                     u1751:
  2574  04B4  2CA6               	goto	l2344
  2575  04B5                     u1750:
  2576  04B5  2CC4               	goto	l257
  2577  04B6                     l2348:
  2578                           
  2579                           ;lcd_hd44780_pic16.c: 353: else;lcd_hd44780_pic16.c: 354: j=5-field_length;
  2580  04B6  0826               	movf	LCDWriteInt@field_length,w
  2581  04B7  00A7               	movwf	??_LCDWriteInt
  2582  04B8  01A8               	clrf	??_LCDWriteInt+1
  2583  04B9  1BA7               	btfsc	??_LCDWriteInt,7
  2584  04BA  03A8               	decf	??_LCDWriteInt+1,f
  2585  04BB  3005               	movlw	5
  2586  04BC  00A9               	movwf	??_LCDWriteInt+2
  2587  04BD  0827               	movf	??_LCDWriteInt,w
  2588  04BE  0229               	subwf	??_LCDWriteInt+2,w
  2589  04BF  00AF               	movwf	LCDWriteInt@j
  2590  04C0  0928               	comf	??_LCDWriteInt+1,w
  2591  04C1  1803               	skipnc
  2592  04C2  3E01               	addlw	1
  2593  04C3  00B0               	movwf	LCDWriteInt@j+1
  2594  04C4                     l257:
  2595                           
  2596                           ;lcd_hd44780_pic16.c: 357: for(i=j;i<5;i++)
  2597  04C4  0830               	movf	LCDWriteInt@j+1,w
  2598  04C5  00B2               	movwf	LCDWriteInt@i+1
  2599  04C6  082F               	movf	LCDWriteInt@j,w
  2600  04C7  00B1               	movwf	LCDWriteInt@i
  2601  04C8                     l2350:
  2602  04C8  0832               	movf	LCDWriteInt@i+1,w
  2603  04C9  3A80               	xorlw	128
  2604  04CA  00FF               	movwf	btemp+1
  2605  04CB  3080               	movlw	128
  2606  04CC  027F               	subwf	btemp+1,w
  2607  04CD  1D03               	skipz
  2608  04CE  2CD1               	goto	u1765
  2609  04CF  3005               	movlw	5
  2610  04D0  0231               	subwf	LCDWriteInt@i,w
  2611  04D1                     u1765:
  2612  04D1  1C03               	skipc
  2613  04D2  2CD4               	goto	u1761
  2614  04D3  2CD5               	goto	u1760
  2615  04D4                     u1761:
  2616  04D4  2CD6               	goto	l2354
  2617  04D5                     u1760:
  2618  04D5  2CEE               	goto	l260
  2619  04D6                     l2354:
  2620                           
  2621                           ;lcd_hd44780_pic16.c: 358: {;lcd_hd44780_pic16.c: 359: (LCDByte(48+str[i],1));
  2622  04D6  01F3               	clrf	LCDByte@isdata
  2623  04D7  0AF3               	incf	LCDByte@isdata,f
  2624  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2625  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2626  04DA  0831               	movf	LCDWriteInt@i,w
  2627  04DB  3E2A               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2628  04DC  0084               	movwf	4
  2629  04DD  1383               	bcf	3,7	;select IRP bank0
  2630  04DE  0800               	movf	0,w
  2631  04DF  3E30               	addlw	48
  2632  04E0  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  2633  04E5                     l2356:
  2634  04E5  3001               	movlw	1
  2635  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2636  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2637  04E8  07B1               	addwf	LCDWriteInt@i,f
  2638  04E9  1803               	skipnc
  2639  04EA  0AB2               	incf	LCDWriteInt@i+1,f
  2640  04EB  3000               	movlw	0
  2641  04EC  07B2               	addwf	LCDWriteInt@i+1,f
  2642  04ED  2CC8               	goto	l2350
  2643  04EE                     l260:
  2644  04EE  0008               	return
  2645  04EF                     __end_of_LCDWriteInt:
  2646                           
  2647                           	psect	text4
  2648  0632                     __ptext4:	
  2649 ;; *************** function ___awmod *****************
  2650 ;; Defined at:
  2651 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  divisor         2    3[COMMON] int 
  2654 ;;  dividend        2    5[COMMON] int 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  sign            1    1[BANK0 ] unsigned char 
  2657 ;;  counter         1    0[BANK0 ] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  2    3[COMMON] int 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         4       0       0       0       0
  2668 ;;      Locals:         0       2       0       0       0
  2669 ;;      Temps:          1       0       0       0       0
  2670 ;;      Totals:         5       2       0       0       0
  2671 ;;Total ram usage:        7 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_LCDWriteInt
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           
  2682                           ;psect for function ___awmod
  2683  0632                     ___awmod:
  2684  0632                     l2202:	
  2685                           ;incstack = 0
  2686                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2687                           
  2688  0632  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0633  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0634  01A1               	clrf	___awmod@sign
  2691  0635                     l2204:
  2692  0635  1FF6               	btfss	___awmod@dividend+1,7
  2693  0636  2E38               	goto	u1611
  2694  0637  2E39               	goto	u1610
  2695  0638                     u1611:
  2696  0638  2E40               	goto	l2210
  2697  0639                     u1610:
  2698  0639                     l2206:
  2699  0639  09F5               	comf	___awmod@dividend,f
  2700  063A  09F6               	comf	___awmod@dividend+1,f
  2701  063B  0AF5               	incf	___awmod@dividend,f
  2702  063C  1903               	skipnz
  2703  063D  0AF6               	incf	___awmod@dividend+1,f
  2704  063E                     l2208:
  2705  063E  01A1               	clrf	___awmod@sign
  2706  063F  0AA1               	incf	___awmod@sign,f
  2707  0640                     l2210:
  2708  0640  1FF4               	btfss	___awmod@divisor+1,7
  2709  0641  2E43               	goto	u1621
  2710  0642  2E44               	goto	u1620
  2711  0643                     u1621:
  2712  0643  2E49               	goto	l2214
  2713  0644                     u1620:
  2714  0644                     l2212:
  2715  0644  09F3               	comf	___awmod@divisor,f
  2716  0645  09F4               	comf	___awmod@divisor+1,f
  2717  0646  0AF3               	incf	___awmod@divisor,f
  2718  0647  1903               	skipnz
  2719  0648  0AF4               	incf	___awmod@divisor+1,f
  2720  0649                     l2214:
  2721  0649  0873               	movf	___awmod@divisor,w
  2722  064A  0474               	iorwf	___awmod@divisor+1,w
  2723  064B  1903               	btfsc	3,2
  2724  064C  2E4E               	goto	u1631
  2725  064D  2E4F               	goto	u1630
  2726  064E                     u1631:
  2727  064E  2E7E               	goto	l2232
  2728  064F                     u1630:
  2729  064F                     l2216:
  2730  064F  01A0               	clrf	___awmod@counter
  2731  0650  0AA0               	incf	___awmod@counter,f
  2732  0651  2E5D               	goto	l2222
  2733  0652                     l2218:
  2734  0652  3001               	movlw	1
  2735  0653                     u1645:
  2736  0653  1003               	clrc
  2737  0654  0DF3               	rlf	___awmod@divisor,f
  2738  0655  0DF4               	rlf	___awmod@divisor+1,f
  2739  0656  3EFF               	addlw	-1
  2740  0657  1D03               	skipz
  2741  0658  2E53               	goto	u1645
  2742  0659                     l2220:
  2743  0659  3001               	movlw	1
  2744  065A  00F7               	movwf	??___awmod
  2745  065B  0877               	movf	??___awmod,w
  2746  065C  07A0               	addwf	___awmod@counter,f
  2747  065D                     l2222:
  2748  065D  1FF4               	btfss	___awmod@divisor+1,7
  2749  065E  2E60               	goto	u1651
  2750  065F  2E61               	goto	u1650
  2751  0660                     u1651:
  2752  0660  2E52               	goto	l2218
  2753  0661                     u1650:
  2754  0661                     l2224:
  2755  0661  0874               	movf	___awmod@divisor+1,w
  2756  0662  0276               	subwf	___awmod@dividend+1,w
  2757  0663  1D03               	skipz
  2758  0664  2E67               	goto	u1665
  2759  0665  0873               	movf	___awmod@divisor,w
  2760  0666  0275               	subwf	___awmod@dividend,w
  2761  0667                     u1665:
  2762  0667  1C03               	skipc
  2763  0668  2E6A               	goto	u1661
  2764  0669  2E6B               	goto	u1660
  2765  066A                     u1661:
  2766  066A  2E71               	goto	l2228
  2767  066B                     u1660:
  2768  066B                     l2226:
  2769  066B  0873               	movf	___awmod@divisor,w
  2770  066C  02F5               	subwf	___awmod@dividend,f
  2771  066D  0874               	movf	___awmod@divisor+1,w
  2772  066E  1C03               	skipc
  2773  066F  03F6               	decf	___awmod@dividend+1,f
  2774  0670  02F6               	subwf	___awmod@dividend+1,f
  2775  0671                     l2228:
  2776  0671  3001               	movlw	1
  2777  0672                     u1675:
  2778  0672  1003               	clrc
  2779  0673  0CF4               	rrf	___awmod@divisor+1,f
  2780  0674  0CF3               	rrf	___awmod@divisor,f
  2781  0675  3EFF               	addlw	-1
  2782  0676  1D03               	skipz
  2783  0677  2E72               	goto	u1675
  2784  0678                     l2230:
  2785  0678  3001               	movlw	1
  2786  0679  02A0               	subwf	___awmod@counter,f
  2787  067A  1D03               	btfss	3,2
  2788  067B  2E7D               	goto	u1681
  2789  067C  2E7E               	goto	u1680
  2790  067D                     u1681:
  2791  067D  2E61               	goto	l2224
  2792  067E                     u1680:
  2793  067E                     l2232:
  2794  067E  0821               	movf	___awmod@sign,w
  2795  067F  1903               	btfsc	3,2
  2796  0680  2E82               	goto	u1691
  2797  0681  2E83               	goto	u1690
  2798  0682                     u1691:
  2799  0682  2E88               	goto	l2236
  2800  0683                     u1690:
  2801  0683                     l2234:
  2802  0683  09F5               	comf	___awmod@dividend,f
  2803  0684  09F6               	comf	___awmod@dividend+1,f
  2804  0685  0AF5               	incf	___awmod@dividend,f
  2805  0686  1903               	skipnz
  2806  0687  0AF6               	incf	___awmod@dividend+1,f
  2807  0688                     l2236:
  2808  0688  0876               	movf	___awmod@dividend+1,w
  2809  0689  00F4               	movwf	?___awmod+1
  2810  068A  0875               	movf	___awmod@dividend,w
  2811  068B  00F3               	movwf	?___awmod
  2812  068C                     l522:
  2813  068C  0008               	return
  2814  068D                     __end_of___awmod:
  2815                           
  2816                           	psect	text5
  2817  05C9                     __ptext5:	
  2818 ;; *************** function ___awdiv *****************
  2819 ;; Defined at:
  2820 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  divisor         2    3[COMMON] int 
  2823 ;;  dividend        2    5[COMMON] int 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  quotient        2    2[BANK0 ] int 
  2826 ;;  sign            1    1[BANK0 ] unsigned char 
  2827 ;;  counter         1    0[BANK0 ] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  2    3[COMMON] int 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         4       0       0       0       0
  2838 ;;      Locals:         0       4       0       0       0
  2839 ;;      Temps:          1       0       0       0       0
  2840 ;;      Totals:         5       4       0       0       0
  2841 ;;Total ram usage:        9 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_LCDWriteInt
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function ___awdiv
  2853  05C9                     ___awdiv:
  2854  05C9                     l1592:	
  2855                           ;incstack = 0
  2856                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2857                           
  2858  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2859  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2860  05CB  01A1               	clrf	___awdiv@sign
  2861  05CC                     l1594:
  2862  05CC  1FF4               	btfss	___awdiv@divisor+1,7
  2863  05CD  2DCF               	goto	u851
  2864  05CE  2DD0               	goto	u850
  2865  05CF                     u851:
  2866  05CF  2DD7               	goto	l1600
  2867  05D0                     u850:
  2868  05D0                     l1596:
  2869  05D0  09F3               	comf	___awdiv@divisor,f
  2870  05D1  09F4               	comf	___awdiv@divisor+1,f
  2871  05D2  0AF3               	incf	___awdiv@divisor,f
  2872  05D3  1903               	skipnz
  2873  05D4  0AF4               	incf	___awdiv@divisor+1,f
  2874  05D5                     l1598:
  2875  05D5  01A1               	clrf	___awdiv@sign
  2876  05D6  0AA1               	incf	___awdiv@sign,f
  2877  05D7                     l1600:
  2878  05D7  1FF6               	btfss	___awdiv@dividend+1,7
  2879  05D8  2DDA               	goto	u861
  2880  05D9  2DDB               	goto	u860
  2881  05DA                     u861:
  2882  05DA  2DE4               	goto	l1606
  2883  05DB                     u860:
  2884  05DB                     l1602:
  2885  05DB  09F5               	comf	___awdiv@dividend,f
  2886  05DC  09F6               	comf	___awdiv@dividend+1,f
  2887  05DD  0AF5               	incf	___awdiv@dividend,f
  2888  05DE  1903               	skipnz
  2889  05DF  0AF6               	incf	___awdiv@dividend+1,f
  2890  05E0                     l1604:
  2891  05E0  3001               	movlw	1
  2892  05E1  00F7               	movwf	??___awdiv
  2893  05E2  0877               	movf	??___awdiv,w
  2894  05E3  06A1               	xorwf	___awdiv@sign,f
  2895  05E4                     l1606:
  2896  05E4  01A2               	clrf	___awdiv@quotient
  2897  05E5  01A3               	clrf	___awdiv@quotient+1
  2898  05E6                     l1608:
  2899  05E6  0873               	movf	___awdiv@divisor,w
  2900  05E7  0474               	iorwf	___awdiv@divisor+1,w
  2901  05E8  1903               	btfsc	3,2
  2902  05E9  2DEB               	goto	u871
  2903  05EA  2DEC               	goto	u870
  2904  05EB                     u871:
  2905  05EB  2E23               	goto	l1628
  2906  05EC                     u870:
  2907  05EC                     l1610:
  2908  05EC  01A0               	clrf	___awdiv@counter
  2909  05ED  0AA0               	incf	___awdiv@counter,f
  2910  05EE  2DFA               	goto	l1616
  2911  05EF                     l1612:
  2912  05EF  3001               	movlw	1
  2913  05F0                     u885:
  2914  05F0  1003               	clrc
  2915  05F1  0DF3               	rlf	___awdiv@divisor,f
  2916  05F2  0DF4               	rlf	___awdiv@divisor+1,f
  2917  05F3  3EFF               	addlw	-1
  2918  05F4  1D03               	skipz
  2919  05F5  2DF0               	goto	u885
  2920  05F6                     l1614:
  2921  05F6  3001               	movlw	1
  2922  05F7  00F7               	movwf	??___awdiv
  2923  05F8  0877               	movf	??___awdiv,w
  2924  05F9  07A0               	addwf	___awdiv@counter,f
  2925  05FA                     l1616:
  2926  05FA  1FF4               	btfss	___awdiv@divisor+1,7
  2927  05FB  2DFD               	goto	u891
  2928  05FC  2DFE               	goto	u890
  2929  05FD                     u891:
  2930  05FD  2DEF               	goto	l1612
  2931  05FE                     u890:
  2932  05FE                     l1618:
  2933  05FE  3001               	movlw	1
  2934  05FF                     u905:
  2935  05FF  1003               	clrc
  2936  0600  0DA2               	rlf	___awdiv@quotient,f
  2937  0601  0DA3               	rlf	___awdiv@quotient+1,f
  2938  0602  3EFF               	addlw	-1
  2939  0603  1D03               	skipz
  2940  0604  2DFF               	goto	u905
  2941  0605  0874               	movf	___awdiv@divisor+1,w
  2942  0606  0276               	subwf	___awdiv@dividend+1,w
  2943  0607  1D03               	skipz
  2944  0608  2E0B               	goto	u915
  2945  0609  0873               	movf	___awdiv@divisor,w
  2946  060A  0275               	subwf	___awdiv@dividend,w
  2947  060B                     u915:
  2948  060B  1C03               	skipc
  2949  060C  2E0E               	goto	u911
  2950  060D  2E0F               	goto	u910
  2951  060E                     u911:
  2952  060E  2E16               	goto	l1624
  2953  060F                     u910:
  2954  060F                     l1620:
  2955  060F  0873               	movf	___awdiv@divisor,w
  2956  0610  02F5               	subwf	___awdiv@dividend,f
  2957  0611  0874               	movf	___awdiv@divisor+1,w
  2958  0612  1C03               	skipc
  2959  0613  03F6               	decf	___awdiv@dividend+1,f
  2960  0614  02F6               	subwf	___awdiv@dividend+1,f
  2961  0615                     l1622:
  2962  0615  1422               	bsf	___awdiv@quotient,0
  2963  0616                     l1624:
  2964  0616  3001               	movlw	1
  2965  0617                     u925:
  2966  0617  1003               	clrc
  2967  0618  0CF4               	rrf	___awdiv@divisor+1,f
  2968  0619  0CF3               	rrf	___awdiv@divisor,f
  2969  061A  3EFF               	addlw	-1
  2970  061B  1D03               	skipz
  2971  061C  2E17               	goto	u925
  2972  061D                     l1626:
  2973  061D  3001               	movlw	1
  2974  061E  02A0               	subwf	___awdiv@counter,f
  2975  061F  1D03               	btfss	3,2
  2976  0620  2E22               	goto	u931
  2977  0621  2E23               	goto	u930
  2978  0622                     u931:
  2979  0622  2DFE               	goto	l1618
  2980  0623                     u930:
  2981  0623                     l1628:
  2982  0623  0821               	movf	___awdiv@sign,w
  2983  0624  1903               	btfsc	3,2
  2984  0625  2E27               	goto	u941
  2985  0626  2E28               	goto	u940
  2986  0627                     u941:
  2987  0627  2E2D               	goto	l1632
  2988  0628                     u940:
  2989  0628                     l1630:
  2990  0628  09A2               	comf	___awdiv@quotient,f
  2991  0629  09A3               	comf	___awdiv@quotient+1,f
  2992  062A  0AA2               	incf	___awdiv@quotient,f
  2993  062B  1903               	skipnz
  2994  062C  0AA3               	incf	___awdiv@quotient+1,f
  2995  062D                     l1632:
  2996  062D  0823               	movf	___awdiv@quotient+1,w
  2997  062E  00F4               	movwf	?___awdiv+1
  2998  062F  0822               	movf	___awdiv@quotient,w
  2999  0630  00F3               	movwf	?___awdiv
  3000  0631                     l509:
  3001  0631  0008               	return
  3002  0632                     __end_of___awdiv:
  3003                           
  3004                           	psect	text6
  3005  04EF                     __ptext6:	
  3006 ;; *************** function _LCDInit *****************
  3007 ;; Defined at:
  3008 ;;		line 199 in file "lcd_hd44780_pic16.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  style           1    wreg     unsigned char 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  style           1    4[BANK0 ] unsigned char 
  3013 ;;  __i             1    5[BANK0 ] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       0       0       0
  3024 ;;      Locals:         0       2       0       0       0
  3025 ;;      Temps:          2       0       0       0       0
  3026 ;;      Totals:         2       2       0       0       0
  3027 ;;Total ram usage:        4 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    2
  3030 ;; This function calls:
  3031 ;;		_LCDByte
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _LCDInit
  3039  04EF                     _LCDInit:
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3043                           ;LCDInit@style stored from wreg
  3044  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3045  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3046  04F1  00A4               	movwf	LCDInit@style
  3047  04F2                     l2240:
  3048                           
  3049                           ;lcd_hd44780_pic16.c: 215: _delay((unsigned long)((30)*(4000000/4000.0)));
  3050  04F2  3027               	movlw	39
  3051  04F3  00F7               	movwf	??_LCDInit+1
  3052  04F4  30F5               	movlw	245
  3053  04F5  00F6               	movwf	??_LCDInit
  3054  04F6                     u2337:
  3055  04F6  0BF6               	decfsz	??_LCDInit,f
  3056  04F7  2CF6               	goto	u2337
  3057  04F8  0BF7               	decfsz	??_LCDInit+1,f
  3058  04F9  2CF6               	goto	u2337
  3059  04FA                     l2242:
  3060                           
  3061                           ;lcd_hd44780_pic16.c: 218: TRISA&=(~(0x0F<<0));
  3062  04FA  30F0               	movlw	240
  3063  04FB  00F6               	movwf	??_LCDInit
  3064  04FC  0876               	movf	??_LCDInit,w
  3065  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  3066  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  3067  04FF  0585               	andwf	5,f	;volatile
  3068  0500                     l2244:
  3069                           
  3070                           ;lcd_hd44780_pic16.c: 220: TRISAbits.TRISA5=0;
  3071  0500  1285               	bcf	5,5	;volatile
  3072  0501                     l2246:
  3073                           
  3074                           ;lcd_hd44780_pic16.c: 221: TRISAbits.TRISA4=0;
  3075  0501  1205               	bcf	5,4	;volatile
  3076  0502                     l2248:
  3077                           
  3078                           ;lcd_hd44780_pic16.c: 224: PORTA&=(~(0x0F<<0));
  3079  0502  30F0               	movlw	240
  3080  0503  00F6               	movwf	??_LCDInit
  3081  0504  0876               	movf	??_LCDInit,w
  3082  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0507  0585               	andwf	5,f	;volatile
  3085  0508                     l2250:
  3086                           
  3087                           ;lcd_hd44780_pic16.c: 226: (RA5=0);
  3088  0508  1285               	bcf	5,5	;volatile
  3089  0509                     l2252:
  3090                           
  3091                           ;lcd_hd44780_pic16.c: 228: (RA4=0);
  3092  0509  1205               	bcf	5,4	;volatile
  3093  050A                     l2254:
  3094                           
  3095                           ;lcd_hd44780_pic16.c: 232: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3096  050A  0000               	nop
  3097  050B                     l2256:
  3098                           
  3099                           ;lcd_hd44780_pic16.c: 233: (RA5=1);
  3100  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3101  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3102  050D  1685               	bsf	5,5	;volatile
  3103  050E                     l2258:
  3104                           
  3105                           ;lcd_hd44780_pic16.c: 234: PORTA|=((0b00000010)<<0);
  3106  050E  1485               	bsf	5,1	;volatile
  3107  050F                     l2260:
  3108                           
  3109                           ;lcd_hd44780_pic16.c: 235: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3110  050F  0000               	nop
  3111  0510                     l2262:
  3112                           
  3113                           ;lcd_hd44780_pic16.c: 236: (RA5=0);
  3114  0510  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0511  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0512  1285               	bcf	5,5	;volatile
  3117  0513                     l2264:
  3118                           
  3119                           ;lcd_hd44780_pic16.c: 237: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3120  0513  0000               	nop
  3121                           
  3122                           ;lcd_hd44780_pic16.c: 241: _delay((unsigned long)((50)*(4000000/4000000.0)));
  3123  0514  3010               	movlw	16
  3124  0515  00F6               	movwf	??_LCDInit
  3125  0516                     u2347:
  3126  0516  0BF6               	decfsz	??_LCDInit,f
  3127  0517  2D16               	goto	u2347
  3128  0518  0000               	nop
  3129  0519                     l2266:
  3130                           
  3131                           ;lcd_hd44780_pic16.c: 246: (LCDByte(0b00101000,0));
  3132  0519  01F3               	clrf	LCDByte@isdata
  3133  051A  3028               	movlw	40
  3134  051B  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  3135  0520                     l2268:
  3136                           
  3137                           ;lcd_hd44780_pic16.c: 248: _delay((unsigned long)((50)*(4000000/4000000.0)));
  3138  0520  3010               	movlw	16
  3139  0521  00F6               	movwf	??_LCDInit
  3140  0522                     u2357:
  3141  0522  0BF6               	decfsz	??_LCDInit,f
  3142  0523  2D22               	goto	u2357
  3143  0524  0000               	nop
  3144                           
  3145                           ;lcd_hd44780_pic16.c: 251: (LCDByte(0b00001100|style,0));
  3146  0525  01F3               	clrf	LCDByte@isdata
  3147  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0527  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0528  0824               	movf	LCDInit@style,w
  3150  0529  380C               	iorlw	12
  3151  052A  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  3152  052F                     l2270:
  3153                           
  3154                           ;lcd_hd44780_pic16.c: 253: _delay((unsigned long)((60)*(4000000/4000000.0)));
  3155  052F  3013               	movlw	19
  3156  0530  00F6               	movwf	??_LCDInit
  3157  0531                     u2367:
  3158  0531  0BF6               	decfsz	??_LCDInit,f
  3159  0532  2D31               	goto	u2367
  3160  0533  2D34               	nop2
  3161  0534                     l2272:
  3162                           
  3163                           ;lcd_hd44780_pic16.c: 255: (LCDByte(0b01000000,0));
  3164  0534  01F3               	clrf	LCDByte@isdata
  3165  0535  3040               	movlw	64
  3166  0536  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  3167                           
  3168                           ;lcd_hd44780_pic16.c: 256: _delay((unsigned long)((50)*(4000000/4000000.0)));
  3169  053B  3010               	movlw	16
  3170  053C  00F6               	movwf	??_LCDInit
  3171  053D                     u2377:
  3172  053D  0BF6               	decfsz	??_LCDInit,f
  3173  053E  2D3D               	goto	u2377
  3174  053F  0000               	nop
  3175  0540                     l2274:
  3176                           
  3177                           ;lcd_hd44780_pic16.c: 258: uint8_t __i;;lcd_hd44780_pic16.c: 259: for(__i=0;__i<sizeof(_
      +                          _cgram);__i++)
  3178  0540  1283               	bcf	3,5	;RP0=0, select bank0
  3179  0541  1303               	bcf	3,6	;RP1=0, select bank0
  3180  0542  01A5               	clrf	LCDInit@__i
  3181  0543                     l2280:
  3182                           
  3183                           ;lcd_hd44780_pic16.c: 260: (LCDByte(__cgram[__i],1));
  3184  0543  01F3               	clrf	LCDByte@isdata
  3185  0544  0AF3               	incf	LCDByte@isdata,f
  3186  0545  0825               	movf	LCDInit@__i,w
  3187  0546  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  3188  0547  0084               	movwf	4
  3189  0548  1383               	bcf	3,7	;select IRP bank1
  3190  0549  0800               	movf	0,w
  3191  054A  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  3192  054F                     l2282:
  3193  054F  3001               	movlw	1
  3194  0550  00F6               	movwf	??_LCDInit
  3195  0551  0876               	movf	??_LCDInit,w
  3196  0552  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0553  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0554  07A5               	addwf	LCDInit@__i,f
  3199  0555                     l2284:
  3200  0555  3040               	movlw	64
  3201  0556  0225               	subwf	LCDInit@__i,w
  3202  0557  1C03               	skipc
  3203  0558  2D5A               	goto	u1701
  3204  0559  2D5B               	goto	u1700
  3205  055A                     u1701:
  3206  055A  2D43               	goto	l2280
  3207  055B                     u1700:
  3208  055B                     l234:
  3209  055B  0008               	return
  3210  055C                     __end_of_LCDInit:
  3211                           
  3212                           	psect	text7
  3213  0FB5                     __ptext7:	
  3214 ;; *************** function _Forward *****************
  3215 ;; Defined at:
  3216 ;;		line 421 in file "main.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      unsigned char 
  3223 ;; Registers used:
  3224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3230 ;;      Params:         0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0
  3232 ;;      Temps:          0       1       0       0       0
  3233 ;;      Totals:         0       1       0       0       0
  3234 ;;Total ram usage:        1 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    3
  3237 ;; This function calls:
  3238 ;;		_LCDGotoXY
  3239 ;;		_LCDWriteString
  3240 ;; This function is called by:
  3241 ;;		_main
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _Forward
  3247  0FB5                     _Forward:
  3248  0FB5                     l2286:	
  3249                           ;incstack = 0
  3250                           ; Regs used in _Forward: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3251                           
  3252                           
  3253                           ;main.c: 424: LCDGotoXY(0,0);
  3254  0FB5  01F6               	clrf	LCDGotoXY@y
  3255  0FB6  3000               	movlw	0
  3256  0FB7  120A  118A  278A  120A  158A  	fcall	_LCDGotoXY
  3257                           
  3258                           ;main.c: 425: LCDWriteString(Forward_);
  3259  0FBC  300C               	movlw	(low ((_Forward_-__stringbase)| (0+32768)))& (0+255)
  3260  0FBD  120A  118A  255C  120A  158A  	fcall	_LCDWriteString
  3261  0FC2                     l2288:
  3262                           
  3263                           ;main.c: 427: PORTC &=~(1<<2);;
  3264  0FC2  30FB               	movlw	251
  3265  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  3266  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  3267  0FC5  00A6               	movwf	??_Forward
  3268  0FC6  0826               	movf	??_Forward,w
  3269  0FC7  0587               	andwf	7,f	;volatile
  3270  0FC8                     l2290:
  3271                           
  3272                           ;main.c: 428: return 0;
  3273  0FC8  3000               	movlw	0
  3274  0FC9                     l177:
  3275  0FC9  0008               	return
  3276  0FCA                     __end_of_Forward:
  3277                           
  3278                           	psect	text8
  3279  07E2                     __ptext8:	
  3280 ;; *************** function _DRIL_ON *****************
  3281 ;; Defined at:
  3282 ;;		line 431 in file "main.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      unsigned char 
  3289 ;; Registers used:
  3290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3296 ;;      Params:         0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0
  3298 ;;      Temps:          0       1       0       0       0
  3299 ;;      Totals:         0       1       0       0       0
  3300 ;;Total ram usage:        1 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    3
  3303 ;; This function calls:
  3304 ;;		_LCDGotoXY
  3305 ;;		_LCDWriteString
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function _DRIL_ON
  3313  07E2                     _DRIL_ON:
  3314  07E2                     l2302:	
  3315                           ;incstack = 0
  3316                           ; Regs used in _DRIL_ON: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3317                           
  3318                           
  3319                           ;main.c: 433: PORTC &=~(1<<1);;
  3320  07E2  30FD               	movlw	253
  3321  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  3322  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  3323  07E5  00A6               	movwf	??_DRIL_ON
  3324  07E6  0826               	movf	??_DRIL_ON,w
  3325  07E7  0587               	andwf	7,f	;volatile
  3326                           
  3327                           ;main.c: 434: PORTC &=~(1<<6);;
  3328  07E8  30BF               	movlw	191
  3329  07E9  00A6               	movwf	??_DRIL_ON
  3330  07EA  0826               	movf	??_DRIL_ON,w
  3331  07EB  0587               	andwf	7,f	;volatile
  3332  07EC                     l2304:
  3333                           
  3334                           ;main.c: 435: LCDGotoXY(8,0);
  3335  07EC  01F6               	clrf	LCDGotoXY@y
  3336  07ED  3008               	movlw	8
  3337  07EE  120A  118A  278A  120A  118A  	fcall	_LCDGotoXY
  3338  07F3                     l2306:
  3339                           
  3340                           ;main.c: 436: LCDWriteString(ON_);
  3341  07F3  3018               	movlw	(low ((_ON_-__stringbase)| (0+32768)))& (0+255)
  3342  07F4  120A  118A  255C  120A  118A  	fcall	_LCDWriteString
  3343  07F9                     l2308:
  3344                           
  3345                           ;main.c: 437: return 1;
  3346  07F9  3001               	movlw	1
  3347  07FA                     l180:
  3348  07FA  0008               	return
  3349  07FB                     __end_of_DRIL_ON:
  3350                           
  3351                           	psect	text9
  3352  0F8F                     __ptext9:	
  3353 ;; *************** function _DRIL_OFF *****************
  3354 ;; Defined at:
  3355 ;;		line 440 in file "main.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      unsigned char 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0
  3372 ;;      Totals:         0       0       0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    3
  3376 ;; This function calls:
  3377 ;;		_LCDGotoXY
  3378 ;;		_LCDWriteString
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           
  3385                           ;psect for function _DRIL_OFF
  3386  0F8F                     _DRIL_OFF:
  3387  0F8F                     l2312:	
  3388                           ;incstack = 0
  3389                           ; Regs used in _DRIL_OFF: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3390                           
  3391                           
  3392                           ;main.c: 442: PORTC |=(1<<1);;
  3393  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0F91  1487               	bsf	7,1	;volatile
  3396                           
  3397                           ;main.c: 443: PORTC |=(1<<6);;
  3398  0F92  1707               	bsf	7,6	;volatile
  3399  0F93                     l2314:
  3400                           
  3401                           ;main.c: 444: LCDGotoXY(8,0);
  3402  0F93  01F6               	clrf	LCDGotoXY@y
  3403  0F94  3008               	movlw	8
  3404  0F95  120A  118A  278A  120A  158A  	fcall	_LCDGotoXY
  3405                           
  3406                           ;main.c: 445: LCDWriteString(OFF_);
  3407  0F9A  3014               	movlw	(low ((_OFF_-__stringbase)| (0+32768)))& (0+255)
  3408  0F9B  120A  118A  255C  120A  158A  	fcall	_LCDWriteString
  3409  0FA0                     l2316:
  3410                           
  3411                           ;main.c: 446: return 0;
  3412  0FA0  3000               	movlw	0
  3413  0FA1                     l183:
  3414  0FA1  0008               	return
  3415  0FA2                     __end_of_DRIL_OFF:
  3416                           
  3417                           	psect	text10
  3418  055C                     __ptext10:	
  3419 ;; *************** function _LCDWriteString *****************
  3420 ;; Defined at:
  3421 ;;		line 264 in file "lcd_hd44780_pic16.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  msg             1    wreg     PTR const unsigned char 
  3424 ;;		 -> ON_(4), Forward_(8), Reverse_(8), STR_8(2), 
  3425 ;;		 -> STR_7(3), STR_6(4), STR_5(2), STR_4(3), 
  3426 ;;		 -> STR_3(4), Tapping(4), STR_2(4), STR_1(6), 
  3427 ;;		 -> OFF_(4), 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  msg             1    5[BANK0 ] PTR const unsigned char 
  3430 ;;		 -> ON_(4), Forward_(8), Reverse_(8), STR_8(2), 
  3431 ;;		 -> STR_7(3), STR_6(4), STR_5(2), STR_4(3), 
  3432 ;;		 -> STR_3(4), Tapping(4), STR_2(4), STR_1(6), 
  3433 ;;		 -> OFF_(4), 
  3434 ;;  cc              1    4[BANK0 ] char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       0       0       0       0
  3445 ;;      Locals:         0       2       0       0       0
  3446 ;;      Temps:          1       0       0       0       0
  3447 ;;      Totals:         1       2       0       0       0
  3448 ;;Total ram usage:        3 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    2
  3451 ;; This function calls:
  3452 ;;		_LCDByte
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;;		_Reverse
  3456 ;;		_Forward
  3457 ;;		_DRIL_ON
  3458 ;;		_DRIL_OFF
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           
  3463                           ;psect for function _LCDWriteString
  3464  055C                     _LCDWriteString:
  3465                           
  3466                           ;incstack = 0
  3467                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3468                           ;LCDWriteString@msg stored from wreg
  3469  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3470  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3471  055E  00A5               	movwf	LCDWriteString@msg
  3472  055F                     l2178:
  3473                           
  3474                           ;lcd_hd44780_pic16.c: 294: while(*msg!='\0')
  3475  055F  2DBC               	goto	l2200
  3476  0560                     l2180:
  3477                           
  3478                           ;lcd_hd44780_pic16.c: 295: {;lcd_hd44780_pic16.c: 298: if(*msg=='%')
  3479  0560  0825               	movf	LCDWriteString@msg,w
  3480  0561  0084               	movwf	4
  3481  0562  120A  118A  2757  120A  118A  	fcall	stringdir
  3482  0567  3A25               	xorlw	37
  3483  0568  1D03               	skipz
  3484  0569  2D6B               	goto	u1571
  3485  056A  2D6C               	goto	u1570
  3486  056B                     u1571:
  3487  056B  2DA8               	goto	l2196
  3488  056C                     u1570:
  3489  056C                     l2182:
  3490                           
  3491                           ;lcd_hd44780_pic16.c: 299: {;lcd_hd44780_pic16.c: 300: msg++;
  3492  056C  3001               	movlw	1
  3493  056D  00F6               	movwf	??_LCDWriteString
  3494  056E  0876               	movf	??_LCDWriteString,w
  3495  056F  07A5               	addwf	LCDWriteString@msg,f
  3496  0570                     l2184:
  3497                           
  3498                           ;lcd_hd44780_pic16.c: 301: int8_t cc=*msg-'0';
  3499  0570  0825               	movf	LCDWriteString@msg,w
  3500  0571  0084               	movwf	4
  3501  0572  120A  118A  2757  120A  118A  	fcall	stringdir
  3502  0577  3ED0               	addlw	-48
  3503  0578  00F6               	movwf	??_LCDWriteString
  3504  0579  0876               	movf	??_LCDWriteString,w
  3505  057A  00A4               	movwf	LCDWriteString@cc
  3506  057B                     l2186:
  3507                           
  3508                           ;lcd_hd44780_pic16.c: 303: if(cc>=0 && cc<=7)
  3509  057B  1BA4               	btfsc	LCDWriteString@cc,7
  3510  057C  2D7E               	goto	u1581
  3511  057D  2D7F               	goto	u1580
  3512  057E                     u1581:
  3513  057E  2D8F               	goto	l2192
  3514  057F                     u1580:
  3515  057F                     l2188:
  3516  057F  0824               	movf	LCDWriteString@cc,w
  3517  0580  3A80               	xorlw	128
  3518  0581  3E78               	addlw	-136
  3519  0582  1803               	skipnc
  3520  0583  2D85               	goto	u1591
  3521  0584  2D86               	goto	u1590
  3522  0585                     u1591:
  3523  0585  2D8F               	goto	l2192
  3524  0586                     u1590:
  3525  0586                     l2190:
  3526                           
  3527                           ;lcd_hd44780_pic16.c: 304: {;lcd_hd44780_pic16.c: 305: (LCDByte(cc,1));
  3528  0586  01F3               	clrf	LCDByte@isdata
  3529  0587  0AF3               	incf	LCDByte@isdata,f
  3530  0588  0824               	movf	LCDWriteString@cc,w
  3531  0589  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  3532                           
  3533                           ;lcd_hd44780_pic16.c: 306: }
  3534  058E  2DB6               	goto	l2198
  3535  058F                     l2192:
  3536                           
  3537                           ;lcd_hd44780_pic16.c: 307: else;lcd_hd44780_pic16.c: 308: {;lcd_hd44780_pic16.c: 309: (L
      +                          CDByte('%',1));
  3538  058F  01F3               	clrf	LCDByte@isdata
  3539  0590  0AF3               	incf	LCDByte@isdata,f
  3540  0591  3025               	movlw	37
  3541  0592  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  3542  0597                     l2194:
  3543                           
  3544                           ;lcd_hd44780_pic16.c: 310: (LCDByte(*msg,1));
  3545  0597  01F3               	clrf	LCDByte@isdata
  3546  0598  0AF3               	incf	LCDByte@isdata,f
  3547  0599  1283               	bcf	3,5	;RP0=0, select bank0
  3548  059A  1303               	bcf	3,6	;RP1=0, select bank0
  3549  059B  0825               	movf	LCDWriteString@msg,w
  3550  059C  0084               	movwf	4
  3551  059D  120A  118A  2757  120A  118A  	fcall	stringdir
  3552  05A2  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  3553  05A7  2DB6               	goto	l2198
  3554  05A8                     l2196:
  3555                           
  3556                           ;lcd_hd44780_pic16.c: 313: else;lcd_hd44780_pic16.c: 314: {;lcd_hd44780_pic16.c: 315: (L
      +                          CDByte(*msg,1));
  3557  05A8  01F3               	clrf	LCDByte@isdata
  3558  05A9  0AF3               	incf	LCDByte@isdata,f
  3559  05AA  0825               	movf	LCDWriteString@msg,w
  3560  05AB  0084               	movwf	4
  3561  05AC  120A  118A  2757  120A  118A  	fcall	stringdir
  3562  05B1  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  3563  05B6                     l2198:
  3564                           
  3565                           ;lcd_hd44780_pic16.c: 317: };lcd_hd44780_pic16.c: 318: msg++;
  3566  05B6  3001               	movlw	1
  3567  05B7  00F6               	movwf	??_LCDWriteString
  3568  05B8  0876               	movf	??_LCDWriteString,w
  3569  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3570  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3571  05BB  07A5               	addwf	LCDWriteString@msg,f
  3572  05BC                     l2200:
  3573  05BC  0825               	movf	LCDWriteString@msg,w
  3574  05BD  0084               	movwf	4
  3575  05BE  120A  118A  2757  120A  118A  	fcall	stringdir
  3576  05C3  3A00               	xorlw	0
  3577  05C4  1D03               	skipz
  3578  05C5  2DC7               	goto	u1601
  3579  05C6  2DC8               	goto	u1600
  3580  05C7                     u1601:
  3581  05C7  2D60               	goto	l2180
  3582  05C8                     u1600:
  3583  05C8                     l244:
  3584  05C8  0008               	return
  3585  05C9                     __end_of_LCDWriteString:
  3586                           
  3587                           	psect	text11
  3588  078A                     __ptext11:	
  3589 ;; *************** function _LCDGotoXY *****************
  3590 ;; Defined at:
  3591 ;;		line 367 in file "lcd_hd44780_pic16.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  x               1    wreg     unsigned char 
  3594 ;;  y               1    6[COMMON] unsigned char 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  x               1    4[BANK0 ] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         1       0       0       0       0
  3607 ;;      Locals:         0       1       0       0       0
  3608 ;;      Temps:          1       0       0       0       0
  3609 ;;      Totals:         2       1       0       0       0
  3610 ;;Total ram usage:        3 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    2
  3613 ;; This function calls:
  3614 ;;		_LCDByte
  3615 ;; This function is called by:
  3616 ;;		_main
  3617 ;;		_Reverse
  3618 ;;		_Forward
  3619 ;;		_DRIL_ON
  3620 ;;		_DRIL_OFF
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _LCDGotoXY
  3626  078A                     _LCDGotoXY:
  3627                           
  3628                           ;incstack = 0
  3629                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3630                           ;LCDGotoXY@x stored from wreg
  3631  078A  1283               	bcf	3,5	;RP0=0, select bank0
  3632  078B  1303               	bcf	3,6	;RP1=0, select bank0
  3633  078C  00A4               	movwf	LCDGotoXY@x
  3634  078D                     l2164:
  3635                           
  3636                           ;lcd_hd44780_pic16.c: 369: if(x>=20) return;
  3637  078D  3014               	movlw	20
  3638  078E  0224               	subwf	LCDGotoXY@x,w
  3639  078F  1C03               	skipc
  3640  0790  2F92               	goto	u1561
  3641  0791  2F93               	goto	u1560
  3642  0792                     u1561:
  3643  0792  2FA0               	goto	l2174
  3644  0793                     u1560:
  3645  0793  2FB6               	goto	l264
  3646  0794                     l268:	
  3647                           ;lcd_hd44780_pic16.c: 377: case 1:
  3648                           
  3649                           
  3650                           ;lcd_hd44780_pic16.c: 378: x|=0b01000000;
  3651  0794  1724               	bsf	LCDGotoXY@x,6
  3652                           
  3653                           ;lcd_hd44780_pic16.c: 379: break;
  3654  0795  2FAE               	goto	l267
  3655  0796                     l2168:
  3656                           
  3657                           ;lcd_hd44780_pic16.c: 381: x+=0x14;
  3658  0796  3014               	movlw	20
  3659  0797  00F7               	movwf	??_LCDGotoXY
  3660  0798  0877               	movf	??_LCDGotoXY,w
  3661  0799  07A4               	addwf	LCDGotoXY@x,f
  3662                           
  3663                           ;lcd_hd44780_pic16.c: 382: break;
  3664  079A  2FAE               	goto	l267
  3665  079B                     l2170:
  3666                           
  3667                           ;lcd_hd44780_pic16.c: 384: x+=0x54;
  3668  079B  3054               	movlw	84
  3669  079C  00F7               	movwf	??_LCDGotoXY
  3670  079D  0877               	movf	??_LCDGotoXY,w
  3671  079E  07A4               	addwf	LCDGotoXY@x,f
  3672                           
  3673                           ;lcd_hd44780_pic16.c: 385: break;
  3674  079F  2FAE               	goto	l267
  3675  07A0                     l2174:
  3676  07A0  0876               	movf	LCDGotoXY@y,w
  3677                           
  3678                           ; Switch size 1, requested type "simple"
  3679                           ; Number of cases is 4, Range of values is 0 to 3
  3680                           ; switch strategies available:
  3681                           ; Name         Instructions Cycles
  3682                           ; simple_byte           13     7 (average)
  3683                           ; direct_byte           20     8 (fixed)
  3684                           ; jumptable            260     6 (fixed)
  3685                           ;	Chosen strategy is simple_byte
  3686  07A1  3A00               	xorlw	0	; case 0
  3687  07A2  1903               	skipnz
  3688  07A3  2FAE               	goto	l267
  3689  07A4  3A01               	xorlw	1	; case 1
  3690  07A5  1903               	skipnz
  3691  07A6  2F94               	goto	l268
  3692  07A7  3A03               	xorlw	3	; case 2
  3693  07A8  1903               	skipnz
  3694  07A9  2F96               	goto	l2168
  3695  07AA  3A01               	xorlw	1	; case 3
  3696  07AB  1903               	skipnz
  3697  07AC  2F9B               	goto	l2170
  3698  07AD  2FAE               	goto	l267
  3699  07AE                     l267:
  3700                           
  3701                           ;lcd_hd44780_pic16.c: 408: x|=0b10000000;
  3702  07AE  17A4               	bsf	LCDGotoXY@x,7
  3703  07AF                     l2176:
  3704                           
  3705                           ;lcd_hd44780_pic16.c: 409: (LCDByte(x,0));
  3706  07AF  01F3               	clrf	LCDByte@isdata
  3707  07B0  0824               	movf	LCDGotoXY@x,w
  3708  07B1  120A  118A  26D5  120A  118A  	fcall	_LCDByte
  3709  07B6                     l264:
  3710  07B6  0008               	return
  3711  07B7                     __end_of_LCDGotoXY:
  3712                           
  3713                           	psect	text12
  3714  06D5                     __ptext12:	
  3715 ;; *************** function _LCDByte *****************
  3716 ;; Defined at:
  3717 ;;		line 84 in file "lcd_hd44780_pic16.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  c               1    wreg     unsigned char 
  3720 ;;  isdata          1    3[COMMON] unsigned char 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  c               1    2[BANK0 ] unsigned char 
  3723 ;;  temp            1    3[BANK0 ] unsigned char 
  3724 ;;  ln              1    1[BANK0 ] unsigned char 
  3725 ;;  hn              1    0[BANK0 ] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3735 ;;      Params:         1       0       0       0       0
  3736 ;;      Locals:         0       4       0       0       0
  3737 ;;      Temps:          2       0       0       0       0
  3738 ;;      Totals:         3       4       0       0       0
  3739 ;;Total ram usage:        7 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_main
  3746 ;;		_LCDInit
  3747 ;;		_LCDWriteString
  3748 ;;		_LCDWriteInt
  3749 ;;		_LCDGotoXY
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _LCDByte
  3755  06D5                     _LCDByte:
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in _LCDByte: [wreg+status,2+status,0]
  3759                           ;LCDByte@c stored from wreg
  3760  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  3761  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  3762  06D7  00A2               	movwf	LCDByte@c
  3763  06D8                     l2136:
  3764                           
  3765                           ;lcd_hd44780_pic16.c: 93: uint8_t hn,ln;;lcd_hd44780_pic16.c: 94: uint8_t temp;;lcd_hd44
      +                          780_pic16.c: 96: hn=c>>4;
  3766  06D8  0822               	movf	LCDByte@c,w
  3767  06D9  00F4               	movwf	??_LCDByte
  3768  06DA  3004               	movlw	4
  3769  06DB                     u1545:
  3770  06DB  1003               	clrc
  3771  06DC  0CF4               	rrf	??_LCDByte,f
  3772  06DD  3EFF               	addlw	-1
  3773  06DE  1D03               	skipz
  3774  06DF  2EDB               	goto	u1545
  3775  06E0  0874               	movf	??_LCDByte,w
  3776  06E1  00F5               	movwf	??_LCDByte+1
  3777  06E2  0875               	movf	??_LCDByte+1,w
  3778  06E3  00A0               	movwf	LCDByte@hn
  3779  06E4                     l2138:
  3780                           
  3781                           ;lcd_hd44780_pic16.c: 97: ln=(c & 0x0F);
  3782  06E4  0822               	movf	LCDByte@c,w
  3783  06E5  390F               	andlw	15
  3784  06E6  00F4               	movwf	??_LCDByte
  3785  06E7  0874               	movf	??_LCDByte,w
  3786  06E8  00A1               	movwf	LCDByte@ln
  3787  06E9                     l2140:
  3788                           
  3789                           ;lcd_hd44780_pic16.c: 99: if(isdata==0)
  3790  06E9  0873               	movf	LCDByte@isdata,w
  3791  06EA  1D03               	btfss	3,2
  3792  06EB  2EED               	goto	u1551
  3793  06EC  2EEE               	goto	u1550
  3794  06ED                     u1551:
  3795  06ED  2EF0               	goto	l222
  3796  06EE                     u1550:
  3797  06EE                     l2142:
  3798                           
  3799                           ;lcd_hd44780_pic16.c: 100: (RA4=0);
  3800  06EE  1205               	bcf	5,4	;volatile
  3801  06EF  2EF1               	goto	l223
  3802  06F0                     l222:
  3803                           
  3804                           ;lcd_hd44780_pic16.c: 101: else;lcd_hd44780_pic16.c: 102: (RA4=1);
  3805  06F0  1605               	bsf	5,4	;volatile
  3806  06F1                     l223:
  3807                           
  3808                           ;lcd_hd44780_pic16.c: 104: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  3809                           ;lcd_hd44780_pic16.c: 106: (RA5=1);
  3810  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  3811  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  3812  06F3  1685               	bsf	5,5	;volatile
  3813  06F4                     l2144:
  3814                           
  3815                           ;lcd_hd44780_pic16.c: 110: temp=(PORTA & (~(0X0F<<0)))|((hn<<0));
  3816  06F4  0805               	movf	5,w	;volatile
  3817  06F5  39F0               	andlw	240
  3818  06F6  0420               	iorwf	LCDByte@hn,w
  3819  06F7  00F4               	movwf	??_LCDByte
  3820  06F8  0874               	movf	??_LCDByte,w
  3821  06F9  00A3               	movwf	LCDByte@temp
  3822  06FA                     l2146:
  3823                           
  3824                           ;lcd_hd44780_pic16.c: 111: PORTA=temp;
  3825  06FA  0823               	movf	LCDByte@temp,w
  3826  06FB  0085               	movwf	5	;volatile
  3827  06FC                     l2148:
  3828                           
  3829                           ;lcd_hd44780_pic16.c: 113: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3830  06FC  0000               	nop
  3831  06FD                     l2150:
  3832                           
  3833                           ;lcd_hd44780_pic16.c: 117: (RA5=0);
  3834  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3835  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  3836  06FF  1285               	bcf	5,5	;volatile
  3837  0700                     l2152:
  3838                           
  3839                           ;lcd_hd44780_pic16.c: 119: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3840  0700  0000               	nop
  3841  0701                     l2154:
  3842                           
  3843                           ;lcd_hd44780_pic16.c: 122: (RA5=1);
  3844  0701  1283               	bcf	3,5	;RP0=0, select bank0
  3845  0702  1303               	bcf	3,6	;RP1=0, select bank0
  3846  0703  1685               	bsf	5,5	;volatile
  3847  0704                     l2156:
  3848                           
  3849                           ;lcd_hd44780_pic16.c: 124: temp=(PORTA & (~(0X0F<<0)))|((ln<<0));
  3850  0704  0805               	movf	5,w	;volatile
  3851  0705  39F0               	andlw	240
  3852  0706  0421               	iorwf	LCDByte@ln,w
  3853  0707  00F4               	movwf	??_LCDByte
  3854  0708  0874               	movf	??_LCDByte,w
  3855  0709  00A3               	movwf	LCDByte@temp
  3856                           
  3857                           ;lcd_hd44780_pic16.c: 126: PORTA=temp;
  3858  070A  0823               	movf	LCDByte@temp,w
  3859  070B  0085               	movwf	5	;volatile
  3860  070C                     l2158:
  3861                           
  3862                           ;lcd_hd44780_pic16.c: 128: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3863  070C  0000               	nop
  3864  070D                     l2160:
  3865                           
  3866                           ;lcd_hd44780_pic16.c: 132: (RA5=0);
  3867  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3868  070E  1303               	bcf	3,6	;RP1=0, select bank0
  3869  070F  1285               	bcf	5,5	;volatile
  3870  0710                     l2162:
  3871                           
  3872                           ;lcd_hd44780_pic16.c: 134: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3873  0710  0000               	nop
  3874                           
  3875                           ;lcd_hd44780_pic16.c: 137: _delay((unsigned long)((50)*(4000000/4000000.0)));
  3876  0711  3010               	movlw	16
  3877  0712  00F4               	movwf	??_LCDByte
  3878  0713                     u2387:
  3879  0713  0BF4               	decfsz	??_LCDByte,f
  3880  0714  2F13               	goto	u2387
  3881  0715  0000               	nop
  3882  0716                     l224:
  3883  0716  0008               	return
  3884  0717                     __end_of_LCDByte:
  3885                           
  3886                           	psect	text13
  3887  0FE1                     __ptext13:	
  3888 ;; *************** function _CheckTAPPING *****************
  3889 ;; Defined at:
  3890 ;;		line 389 in file "main.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  butcount        2    3[COMMON] unsigned int 
  3895 ;;  result          1    5[COMMON] unsigned char 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      unsigned char 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         0       0       0       0       0
  3906 ;;      Locals:         3       0       0       0       0
  3907 ;;      Temps:          0       0       0       0       0
  3908 ;;      Totals:         3       0       0       0       0
  3909 ;;Total ram usage:        3 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_main
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           
  3920                           ;psect for function _CheckTAPPING
  3921  0FE1                     _CheckTAPPING:
  3922  0FE1                     l1760:	
  3923                           ;incstack = 0
  3924                           ; Regs used in _CheckTAPPING: [wreg+status,2]
  3925                           
  3926                           
  3927                           ;main.c: 391: unsigned char result=0;
  3928  0FE1  01F5               	clrf	CheckTAPPING@result
  3929                           
  3930                           ;main.c: 392: unsigned int butcount=0;
  3931  0FE2  01F3               	clrf	CheckTAPPING@butcount
  3932  0FE3  01F4               	clrf	CheckTAPPING@butcount+1
  3933                           
  3934                           ;main.c: 393: while(!RB4)
  3935  0FE4  2FF8               	goto	l166
  3936  0FE5                     l1762:
  3937                           
  3938                           ;main.c: 394: {;main.c: 395: if(butcount < 15000)
  3939  0FE5  303A               	movlw	58
  3940  0FE6  0274               	subwf	CheckTAPPING@butcount+1,w
  3941  0FE7  3098               	movlw	152
  3942  0FE8  1903               	skipnz
  3943  0FE9  0273               	subwf	CheckTAPPING@butcount,w
  3944  0FEA  1803               	skipnc
  3945  0FEB  2FED               	goto	u1061
  3946  0FEC  2FEE               	goto	u1060
  3947  0FED                     u1061:
  3948  0FED  2FF5               	goto	l168
  3949  0FEE                     u1060:
  3950  0FEE                     l1764:
  3951                           
  3952                           ;main.c: 396: {;main.c: 397: butcount++;
  3953  0FEE  3001               	movlw	1
  3954  0FEF  07F3               	addwf	CheckTAPPING@butcount,f
  3955  0FF0  1803               	skipnc
  3956  0FF1  0AF4               	incf	CheckTAPPING@butcount+1,f
  3957  0FF2  3000               	movlw	0
  3958  0FF3  07F4               	addwf	CheckTAPPING@butcount+1,f
  3959                           
  3960                           ;main.c: 398: }
  3961  0FF4  2FF8               	goto	l166
  3962  0FF5                     l168:
  3963                           
  3964                           ;main.c: 399: else;main.c: 400: {;main.c: 401: result = 1;
  3965  0FF5  01F5               	clrf	CheckTAPPING@result
  3966  0FF6  0AF5               	incf	CheckTAPPING@result,f
  3967                           
  3968                           ;main.c: 403: break;
  3969  0FF7  2FFE               	goto	l1766
  3970  0FF8                     l166:
  3971  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  3972  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  3973  0FFA  1E06               	btfss	6,4	;volatile
  3974  0FFB  2FFD               	goto	u1071
  3975  0FFC  2FFE               	goto	u1070
  3976  0FFD                     u1071:
  3977  0FFD  2FE5               	goto	l1762
  3978  0FFE                     u1070:
  3979  0FFE                     l1766:
  3980                           
  3981                           ;main.c: 404: };main.c: 405: };main.c: 406: return result;
  3982  0FFE  0875               	movf	CheckTAPPING@result,w
  3983  0FFF                     l171:
  3984  0FFF  0008               	return
  3985  1000                     __end_of_CheckTAPPING:
  3986                           
  3987                           	psect	text14
  3988  0FCA                     __ptext14:	
  3989 ;; *************** function _BEEP1 *****************
  3990 ;; Defined at:
  3991 ;;		line 464 in file "main.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0
  4007 ;;      Temps:          3       0       0       0       0
  4008 ;;      Totals:         3       0       0       0       0
  4009 ;;Total ram usage:        3 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_main
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _BEEP1
  4021  0FCA                     _BEEP1:
  4022  0FCA                     l1770:	
  4023                           ;incstack = 0
  4024                           ; Regs used in _BEEP1: [wreg+status,2+status,0]
  4025                           
  4026                           
  4027                           ;main.c: 466: PORTC |=(1<<5);;
  4028  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4029  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4030  0FCC  1687               	bsf	7,5	;volatile
  4031  0FCD                     l1772:
  4032                           
  4033                           ;main.c: 467: _delay((unsigned long)((200)*(4000000/4000.0)));
  4034  0FCD  3002               	movlw	2
  4035  0FCE  00F5               	movwf	??_BEEP1+2
  4036  0FCF  3004               	movlw	4
  4037  0FD0  00F4               	movwf	??_BEEP1+1
  4038  0FD1  30BA               	movlw	186
  4039  0FD2  00F3               	movwf	??_BEEP1
  4040  0FD3                     u2397:
  4041  0FD3  0BF3               	decfsz	??_BEEP1,f
  4042  0FD4  2FD3               	goto	u2397
  4043  0FD5  0BF4               	decfsz	??_BEEP1+1,f
  4044  0FD6  2FD3               	goto	u2397
  4045  0FD7  0BF5               	decfsz	??_BEEP1+2,f
  4046  0FD8  2FD3               	goto	u2397
  4047  0FD9  0000               	nop
  4048  0FDA                     l1774:
  4049                           
  4050                           ;main.c: 468: PORTC &=~(1<<5);;
  4051  0FDA  30DF               	movlw	223
  4052  0FDB  00F3               	movwf	??_BEEP1
  4053  0FDC  0873               	movf	??_BEEP1,w
  4054  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0FDF  0587               	andwf	7,f	;volatile
  4057  0FE0                     l190:
  4058  0FE0  0008               	return
  4059  0FE1                     __end_of_BEEP1:
  4060                           
  4061                           	psect	text15
  4062  0F71                     __ptext15:	
  4063 ;; *************** function _BEEP *****************
  4064 ;; Defined at:
  4065 ;;		line 449 in file "main.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         0       0       0       0       0
  4080 ;;      Locals:         0       0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0
  4082 ;;      Totals:         0       0       0       0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    1
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function _BEEP
  4095  0F71                     _BEEP:
  4096  0F71                     l1736:	
  4097                           ;incstack = 0
  4098                           ; Regs used in _BEEP: [wreg+status,2+status,0]
  4099                           
  4100                           
  4101                           ;main.c: 451: if (!delay_beep)
  4102  0F71  0878               	movf	_delay_beep,w
  4103  0F72  1D03               	btfss	3,2
  4104  0F73  2F75               	goto	u1051
  4105  0F74  2F76               	goto	u1050
  4106  0F75                     u1051:
  4107  0F75  2F7C               	goto	l187
  4108  0F76                     u1050:
  4109  0F76                     l1738:
  4110                           
  4111                           ;main.c: 452: {;main.c: 453: delay_beep = 1;
  4112  0F76  01F8               	clrf	_delay_beep
  4113  0F77  0AF8               	incf	_delay_beep,f
  4114                           
  4115                           ;main.c: 454: PORTC |=(1<<5);;
  4116  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0F7A  1687               	bsf	7,5	;volatile
  4119  0F7B                     l1740:
  4120                           
  4121                           ;main.c: 458: TMR0&=~0xFF;
  4122  0F7B  0181               	clrf	1	;volatile
  4123  0F7C                     l187:
  4124  0F7C  0008               	return
  4125  0F7D                     __end_of_BEEP:
  4126                           
  4127                           	psect	text16
  4128  068D                     __ptext16:	
  4129 ;; *************** function _isr *****************
  4130 ;; Defined at:
  4131 ;;		line 471 in file "main.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2, status,0
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4145 ;;      Params:         0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0
  4147 ;;      Temps:          3       0       0       0       0
  4148 ;;      Totals:         3       0       0       0       0
  4149 ;;Total ram usage:        3 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		Interrupt level 1
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           
  4159                           ;psect for function _isr
  4160  068D                     _isr:
  4161  068D                     i1l2108:
  4162                           
  4163                           ;main.c: 473: if (INTF)
  4164  068D  1C8B               	btfss	11,1	;volatile
  4165  068E  2E90               	goto	u147_21
  4166  068F  2E91               	goto	u147_20
  4167  0690                     u147_21:
  4168  0690  2EA9               	goto	i1l2118
  4169  0691                     u147_20:
  4170  0691                     i1l2110:
  4171                           
  4172                           ;main.c: 474: {;main.c: 476: if (count<1000)
  4173  0691  3003               	movlw	3
  4174  0692  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0693  1303               	bcf	3,6	;RP1=0, select bank0
  4176  0694  0243               	subwf	_count+1,w
  4177  0695  30E8               	movlw	232
  4178  0696  1903               	skipnz
  4179  0697  0242               	subwf	_count,w
  4180  0698  1803               	skipnc
  4181  0699  2E9B               	goto	u148_21
  4182  069A  2E9C               	goto	u148_20
  4183  069B                     u148_21:
  4184  069B  2EA8               	goto	i1l2116
  4185  069C                     u148_20:
  4186  069C                     i1l2112:
  4187                           
  4188                           ;main.c: 477: {;main.c: 478: if (!flag_timer1) count++;
  4189  069C  0844               	movf	_flag_timer1,w
  4190  069D  0445               	iorwf	_flag_timer1+1,w
  4191  069E  1D03               	btfss	3,2
  4192  069F  2EA1               	goto	u149_21
  4193  06A0  2EA2               	goto	u149_20
  4194  06A1                     u149_21:
  4195  06A1  2EA8               	goto	i1l2116
  4196  06A2                     u149_20:
  4197  06A2                     i1l2114:
  4198  06A2  3001               	movlw	1
  4199  06A3  07C2               	addwf	_count,f
  4200  06A4  1803               	skipnc
  4201  06A5  0AC3               	incf	_count+1,f
  4202  06A6  3000               	movlw	0
  4203  06A7  07C3               	addwf	_count+1,f
  4204  06A8                     i1l2116:
  4205                           
  4206                           ;main.c: 480: };main.c: 481: INTF = 0;
  4207  06A8  108B               	bcf	11,1	;volatile
  4208  06A9                     i1l2118:
  4209                           
  4210                           ;main.c: 483: };main.c: 485: if(TMR1IF)
  4211  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  4212  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  4213  06AB  1C0C               	btfss	12,0	;volatile
  4214  06AC  2EAE               	goto	u150_21
  4215  06AD  2EAF               	goto	u150_20
  4216  06AE                     u150_21:
  4217  06AE  2EB4               	goto	i1l2124
  4218  06AF                     u150_20:
  4219  06AF                     i1l2120:
  4220                           
  4221                           ;main.c: 486: {;main.c: 493: TMR1IF=0;
  4222  06AF  100C               	bcf	12,0	;volatile
  4223  06B0                     i1l2122:
  4224                           
  4225                           ;main.c: 494: flag_timer1 = 1;
  4226  06B0  3001               	movlw	1
  4227  06B1  00C4               	movwf	_flag_timer1
  4228  06B2  3000               	movlw	0
  4229  06B3  00C5               	movwf	_flag_timer1+1
  4230  06B4                     i1l2124:
  4231                           
  4232                           ;main.c: 497: };main.c: 499: if (T0IF)
  4233  06B4  1D0B               	btfss	11,2	;volatile
  4234  06B5  2EB7               	goto	u151_21
  4235  06B6  2EB8               	goto	u151_20
  4236  06B7                     u151_21:
  4237  06B7  2ECE               	goto	i1l202
  4238  06B8                     u151_20:
  4239  06B8                     i1l2126:
  4240                           
  4241                           ;main.c: 500: {;main.c: 501: TIM0_count++;
  4242  06B8  3001               	movlw	1
  4243  06B9  00F0               	movwf	??_isr
  4244  06BA  0870               	movf	??_isr,w
  4245  06BB  07FA               	addwf	_TIM0_count,f
  4246                           
  4247                           ;main.c: 502: if (delay_beep) PORTC &=~(1<<5);;
  4248  06BC  0878               	movf	_delay_beep,w
  4249  06BD  1903               	btfsc	3,2
  4250  06BE  2EC0               	goto	u152_21
  4251  06BF  2EC1               	goto	u152_20
  4252  06C0                     u152_21:
  4253  06C0  2EC5               	goto	i1l2130
  4254  06C1                     u152_20:
  4255  06C1                     i1l2128:
  4256  06C1  30DF               	movlw	223
  4257  06C2  00F0               	movwf	??_isr
  4258  06C3  0870               	movf	??_isr,w
  4259  06C4  0587               	andwf	7,f	;volatile
  4260  06C5                     i1l2130:
  4261                           
  4262                           ;main.c: 506: if(TIM0_count>10)
  4263  06C5  300B               	movlw	11
  4264  06C6  027A               	subwf	_TIM0_count,w
  4265  06C7  1C03               	skipc
  4266  06C8  2ECA               	goto	u153_21
  4267  06C9  2ECB               	goto	u153_20
  4268  06CA                     u153_21:
  4269  06CA  2ECD               	goto	i1l2134
  4270  06CB                     u153_20:
  4271  06CB                     i1l2132:
  4272                           
  4273                           ;main.c: 507: {;main.c: 508: TIM0_count=0;
  4274  06CB  01FA               	clrf	_TIM0_count
  4275                           
  4276                           ;main.c: 509: delay_beep = 0;
  4277  06CC  01F8               	clrf	_delay_beep
  4278  06CD                     i1l2134:
  4279                           
  4280                           ;main.c: 511: };main.c: 513: T0IF=0;
  4281  06CD  110B               	bcf	11,2	;volatile
  4282  06CE                     i1l202:
  4283  06CE  0872               	movf	??_isr+2,w
  4284  06CF  008A               	movwf	10
  4285  06D0  0E71               	swapf	??_isr+1,w
  4286  06D1  0083               	movwf	3
  4287  06D2  0EFE               	swapf	btemp,f
  4288  06D3  0E7E               	swapf	btemp,w
  4289  06D4  0009               	retfie
  4290  06D5                     __end_of_isr:
  4291  007E                     btemp	set	126	;btemp
  4292  007E                     wtemp0	set	126
  4293                           
  4294                           	psect	intentry
  4295  0004                     __pintentry:	
  4296                           ;incstack = 0
  4297                           ; Regs used in _isr: [wreg+status,2+status,0]
  4298                           
  4299  0004                     interrupt_function:
  4300  007E                     saved_w	set	btemp
  4301  0004  00FE               	movwf	btemp
  4302  0005  0E03               	swapf	3,w
  4303  0006  00F1               	movwf	??_isr+1
  4304  0007  080A               	movf	10,w
  4305  0008  00F2               	movwf	??_isr+2
  4306  0009  120A  118A  2E8D   	ljmp	_isr
  4307                           
  4308                           	psect	config
  4309                           
  4310                           ;Config register CONFIG1 @ 0x2007
  4311                           ;	Oscillator Selection bits
  4312                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  4313                           ;	Watchdog Timer Enable bit
  4314                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4315                           ;	Power-up Timer Enable bit
  4316                           ;	PWRTE = ON, PWRT enabled
  4317                           ;	RE3/MCLR pin function select bit
  4318                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4319                           ;	Code Protection bit
  4320                           ;	CP = ON, Program memory code protection is enabled
  4321                           ;	Data Code Protection bit
  4322                           ;	CPD = ON, Data memory code protection is enabled
  4323                           ;	Brown Out Reset Selection bits
  4324                           ;	BOREN = ON, BOR enabled
  4325                           ;	Internal External Switchover bit
  4326                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4327                           ;	Fail-Safe Clock Monitor Enabled bit
  4328                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4329                           ;	Low Voltage Programming Enable bit
  4330                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4331                           ;	In-Circuit Debugger Mode bit
  4332                           ;	DEBUG = 0x1, unprogrammed default
  4333  2007                     	org	8199
  4334  2007  2F22               	dw	12066
  4335                           
  4336                           ;Config register CONFIG2 @ 0x2008
  4337                           ;	Brown-out Reset Selection bit
  4338                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4339                           ;	Flash Program Memory Self Write Enable bits
  4340                           ;	WRT = OFF, Write protection off
  4341  2008                     	org	8200
  4342  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    31
    Data        64
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     27      40
    BANK1            80      0      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 8
		 -> ON_(CODE[4]), Forward_(CODE[8]), Reverse_(CODE[8]), STR_8(CODE[2]), 
		 -> STR_7(CODE[3]), STR_6(CODE[4]), STR_5(CODE[2]), STR_4(CODE[3]), 
		 -> STR_3(CODE[4]), Tapping(CODE[4]), STR_2(CODE[4]), STR_1(CODE[6]), 
		 -> OFF_(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _Reverse->_LCDGotoXY
    _LCDWriteInt->___awdiv
    _LCDWriteInt->___awmod
    _LCDInit->_LCDByte
    _Forward->_LCDGotoXY
    _DRIL_ON->_LCDGotoXY
    _DRIL_OFF->_LCDGotoXY
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCDWriteInt
    _Reverse->_LCDWriteString
    _LCDWriteInt->_LCDByte
    _LCDWriteInt->___awdiv
    _LCDInit->_LCDByte
    _Forward->_LCDWriteString
    _DRIL_ON->_LCDWriteString
    _DRIL_OFF->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   31036
                                             19 BANK0      8     8      0
                               _BEEP
                              _BEEP1
                       _CheckTAPPING
                           _DRIL_OFF
                            _DRIL_ON
                            _Forward
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                            _Reverse
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Reverse                                              0     0      0    4654
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         15    12      3    4172
                                              4 BANK0     15    12      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1439
                                              6 COMMON     2     2      0
                                              4 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _Forward                                              1     1      0    4654
                                              6 BANK0      1     1      0
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (1) _DRIL_ON                                              1     1      0    4654
                                              6 BANK0      1     1      0
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (1) _DRIL_OFF                                             0     0      0    4654
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       3     3      0    2070
                                              6 COMMON     1     1      0
                                              4 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    2584
                                              6 COMMON     2     1      1
                                              4 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1    1309
                                              3 COMMON     3     2      1
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CheckTAPPING                                         3     3      0      48
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _BEEP1                                                3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _BEEP                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEEP
   _BEEP1
   _CheckTAPPING
   _DRIL_OFF
     _LCDGotoXY
       _LCDByte
     _LCDWriteString
       _LCDByte
   _DRIL_ON
     _LCDGotoXY
       _LCDByte
     _LCDWriteString
       _LCDByte
   _Forward
     _LCDGotoXY
       _LCDByte
     _LCDWriteString
       _LCDByte
   _LCDByte
   _LCDGotoXY
     _LCDByte
   _LCDInit
     _LCDByte
   _LCDWriteInt
     _LCDByte
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
   _Reverse
     _LCDGotoXY
       _LCDByte
     _LCDWriteString
       _LCDByte
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      73      12        0.0%
ABS                  0      0      73       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Nov 26 13:49:12 2020

                      pc 0002             ___awdiv@sign 0021                       fsr 0004  
    ___wmul@multiplicand 0075                      l222 06F0                      l223 06F1  
                    l224 0716                      l234 055B                      l171 0FFF  
                    l244 05C8                      l180 07FA                      l260 04EE  
                    l190 0FE0                      l166 0FF8                      l174 0F8E  
                    l183 0FA1                      l168 0FF5                      l264 07B6  
                    l177 0FC9                      l257 04C4                      l522 068C  
                    l187 0F7C                      l267 07AE                      l268 0794  
                    l356 07C7                      l509 0631                      l358 07E1  
                    _RB1 0031                      _RB2 0032                      _RA4 002C  
                    _RB3 0033                      _RA5 002D                      _RB4 0034  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
                    _RC7 003F                      u910 060F                      u911 060E  
                    u905 05FF                      u930 0623                      u850 05D0  
                    u931 0622                      u915 060B                      u851 05CF  
                    u940 0628                      u860 05DB                      u941 0627  
                    u925 0617                      u861 05DA                      u870 05EC  
                    u871 05EB                      u890 05FE                      u891 05FD  
                    u885 05F0                      _ON_ 0774                      _isr 068D  
                    fsr0 0004                      indf 0000             ___awmod@sign 0021  
        __end_of_DRIL_ON 07FB  LCDWriteInt@field_length 0026          __end_of_LCDByte 0717  
        __end_of_LCDInit 055C             ?_LCDWriteInt 0024              LCDByte@temp 0023  
                   l2200 05BC                     l2210 0640                     l2202 0632  
                   l2140 06E9                     l2220 0659                     l2212 0644  
                   l2204 0635                     l2150 06FD                     l2142 06EE  
                   l2302 07E2                     l2230 0678                     l2222 065D  
                   l2214 0649                     l2206 0639                     l2160 070D  
                   l2152 0700                     l2144 06F4                     l2136 06D8  
                   l2312 0F8F                     l2304 07EC                     l2240 04F2  
                   l1600 05D7                     l2224 0661                     l2216 064F  
                   l2232 067E                     l2208 063E                     l2320 0445  
                   l2400 006C                     l2162 0710                     l2154 0701  
                   l2146 06FA                     l2138 06E4                     l2170 079B  
                   l2314 0F93                     l2306 07F3                     l2250 0508  
                   l2242 04FA                     l1610 05EC                     l1602 05DB  
                   l2234 0683                     l2226 066B                     l2218 0652  
                   l2330 0462                     l2322 044E                     l2410 0071  
                   l2402 006D                     l2156 0704                     l2148 06FC  
                   l2164 078D                     l2180 0560                     l2316 0FA0  
                   l2308 07F9                     l2260 050F                     l2252 0509  
                   l2244 0500                     l1620 060F                     l1612 05EF  
                   l1604 05E0                     l2236 0688                     l2228 0671  
                   l2340 04A0                     l2332 046A                     l2324 0454  
                   l2500 01CF                     l2420 0099                     l2412 0073  
                   l2404 006E                     l2158 070C                     l2174 07A0  
                   l2190 0586                     l2182 056C                     l2270 052F  
                   l2262 0510                     l2254 050A                     l2246 0501  
                   l1630 0628                     l1622 0615                     l1614 05F6  
                   l1606 05E4                     l2350 04C8                     l2334 0481  
                   l2326 0456                     l2510 01F5                     l2502 01D5  
                   l2430 00C3                     l2422 009C                     l2414 0075  
                   l2406 006F                     l2176 07AF                     l2168 0796  
                   l2192 058F                     l2184 0570                     l2280 0543  
                   l2272 0534                     l2264 0513                     l2256 050B  
                   l2248 0502                     l1632 062D                     l1624 0616  
                   l1616 05FA                     l1608 05E6                     l2344 04A6  
                   l2336 0494                     l2328 045A                     l2360 07B7  
                   l2600 0327                     l2520 0211                     l2512 01FB  
                   l2504 01DF                     l2440 00F3                     l2432 00D2  
                   l2424 00AB                     l2416 0084                     l2408 0070  
                   l2194 0597                     l2186 057B                     l2178 055F  
                   l2290 0FC8                     l2282 054F                     l2274 0540  
                   l2266 0519                     l2258 050E                     l1626 061D  
                   l1618 05FE                     l2354 04D6                     l2346 04AC  
                   l2338 049A                     l2370 07DB                     l2362 07BB  
                   l2610 0357                     l2602 0331                     l2522 021C  
                   l2514 01FF                     l2530 0239                     l2506 01E4  
                   l2450 0116                     l2442 00FA                     l2434 00D8  
                   l2426 00B1                     l2418 008A                     l1740 0F7B  
                   l2188 057F                     l2196 05A8                     l2284 0555  
                   l2268 0520                     l1628 0623                     l2356 04E5  
                   l2348 04B6                     l2364 07BF                     l2620 038E  
                   l2612 035D                     l2604 0338                     l2540 0254  
                   l2532 023D                     l2524 0222                     l2516 0204  
                   l2508 01EA                     l2460 0136                     l2452 011C  
                   l2444 0100                     l2436 00DF                     l2428 00C0  
                   l2380 0046                     l2198 05B6                     l2286 0FB5  
                   l2294 0F7D                     l2366 07CE                     l2630 03DC  
                   l2622 0396                     l2614 0363                     l2606 0340  
                   l2550 027D                     l2542 025E                     l2534 0248  
                   l2526 022D                     l2518 020E                     l2462 0141  
                   l2470 015B                     l2454 0122                     l2446 0108  
                   l2438 00E9                     l2390 0060                     l2382 004C  
                   l2374 0031                     l1736 0F71                     l1760 0FE1  
                   l2288 0FC2                     l1592 05C9                     l2296 0F8A  
                   l2368 07D5                     l2640 041A                     l2632 03E5  
                   l2624 03B7                     l2616 0376                     l2608 0346  
                   l2560 029C                     l2552 0284                     l2544 0261  
                   l2536 024E                     l2528 0235                     l2480 0181  
                   l2472 0161                     l2464 0147                     l2456 012C  
                   l2448 010E                     l2392 0062                     l2384 0054  
                   l2376 0037                     l1738 0F76                     l1770 0FCA  
                   l1762 0FE5                     l1594 05CC                     l2298 0F8D  
                   l2650 043F                     l2642 042A                     l2634 03F3  
                   l2626 03C0                     l2618 0386                     l2570 02BA  
                   l2562 02A4                     l2546 026C                     l2538 024F  
                   l2554 0286                     l2490 01A2                     l2474 016C  
                   l2482 0186                     l2466 014C                     l2458 0132  
                   l2394 0065                     l2386 005A                     l2378 003B  
                   l1772 0FCD                     l1764 0FEE                     l1596 05D0  
                   l2636 0403                     l2644 0437                     l2628 03CE  
                   l2580 02CF                     l2572 02C0                     l2564 02AB  
                   l2556 0290                     l2548 0272                     l2492 01A8  
                   l2484 018C                     l2476 0172                     l2468 0156  
                   l2396 0068                     l2388 005E                     l1774 0FDA  
                   l1766 0FFE                     l1598 05D5                     l2646 043B  
                   l2638 040C                     l2590 02F2                     l2582 02D4  
                   l2574 02C3                     l2566 02B1                     l2558 0297  
                   l2494 01B6                     l2486 0197                     l2478 0177  
                   l2398 006B                     l2648 043D                     l2592 0301  
                   l2584 02D9                     l2568 02B7                     l2576 02C4  
                   l2488 019D                     l2496 01C0                     l2594 0308  
                   l2586 02DE                     l2578 02CB                     l2498 01C4  
                   l2596 0313                     l2588 02ED                     l2598 031D  
                   ?_isr 0070                     _BEEP 0F71                     STR_1 077C  
                   STR_2 0786                     STR_3 0786                     STR_4 0783  
                   STR_5 0784                     STR_6 0782                     STR_7 0783  
                   STR_8 0784                     _T0IF 005A                     u2000 02CB  
                   u2001 02CA                     u1050 0F76                     u2010 02CF  
                   u1051 0F75                     u2011 02CE                     u1060 0FEE  
                   u2020 02D4                     u1061 0FED                     u2021 02D3  
                   u1070 0FFE                     u2030 0308                     u1071 0FFD  
                   u2031 0307                     u2040 0340                     u2041 033F  
                   u2050 035D                     u2051 035C                     u2107 007D  
                   u2060 0396                     u2061 0395                     u2117 0092  
                   u2070 03C0                     u2071 03BF                     u2207 01B0  
                   u2127 00A4                     u1600 05C8                     u2080 03E5  
                   u1601 05C7                     u2081 03E4                     u2217 01CA  
                   u2137 00B9                     u1610 0639                     u2090 040C  
                   u1611 0638                     u2091 040B                     u2307 02E6  
                   u2227 01F0                     u2147 00CB                     u1700 055B  
                   u1620 0644                     u1701 055A                     u1621 0643  
                   u2317 02FA                     u2237 020A                     u2157 00E5  
                   u1550 06EE                     u1630 064F                     u1710 0449  
                   u1551 06ED                     u1631 064E                     u2327 0323  
                   u2247 0217                     u2167 0128                     u1560 0793  
                   u1720 045A                     u1800 07DB                     u1545 06DB  
                   u1561 0792                     u2337 04F6                     u1721 0459  
                   u1801 07DA                     u2257 0228                     u2177 013C  
                   u1570 056C                     u1650 0661                     u1730 04A0  
                   u1810 0136                     u1571 056B                     u2347 0516  
                   u1651 0660                     u1731 049F                     u2267 0243  
                   u2187 0167                     u1811 0135                     u1580 057F  
                   u1660 066B                     u1740 04A5                     u1900 01D5  
                   u1820 0147                     u1581 057E                     u2357 0522  
                   u1661 066A                     u1645 0653                     u1741 04A4  
                   u2277 025A                     u1901 01D4                     u2197 0192  
                   u1821 0146                     u1590 0586                     u1750 04B5  
                   u1910 01EA                     u1830 014C                     u1591 0585  
                   u2367 0531                     u1751 04B4                     u2287 0267  
                   u1911 01E9                     u1831 014B                     u1680 067E  
                   u1760 04D5                     u1920 01FB                     u1840 0161  
                   u2377 053D                     u1681 067D                     u1665 0667  
                   u1761 04D4                     u2297 0278                     u1921 01FA  
                   u1841 0160                     u1690 0683                     u1770 07BF  
                   u1930 0235                     u1850 0172                     u2387 0713  
                   u1691 0682                     u1675 0672                     u1771 07BE  
                   u1931 0234                     u1851 0171                     u1940 023D  
                   u1860 0177                     u2397 0FD3                     u1765 04D1  
                   u1941 023C                     u1861 0176                     u1950 024E  
                   u1870 018C                     u1951 024D                     u1871 018B  
                   u1960 0284                     u1880 019D                     u1785 07C8  
                   u1961 0283                     u1881 019C                     u1970 0290  
                   u1890 01C4                     u1795 07CF                     u1971 028F  
                   u1891 01C3                     u1980 0297                     u1981 0296  
                   u1990 02AB                     _INTF 0059                     u1991 02AA  
                   _OFF_ 0770                     _TMR0 0001                     _WPUB 0095  
                   _main 0031       __size_of_LCDGotoXY 002D                     btemp 007E  
                   start 000C          __end_of_Forward 0FCA         __end_of_DRIL_OFF 0FA2  
                  ??_isr 0070                    ?_BEEP 0070    __size_of_CheckTAPPING 001F  
        __end_of_Tapping 077C          __end_of_Reverse 0F8F                    ?_main 0070  
                  _BEEP1 0FCA          __end_of___awdiv 0632          __end_of___awmod 068D  
           LCDInit@style 0024                    _ANSEL 0188          ___awdiv@divisor 0073  
                  i1l202 06CE          ___awdiv@counter 0020                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _count 0042               _Magn_count 075F  
                  pclath 000A                    status 0003                    wtemp0 007E  
           _CheckTAPPING 0FE1             __end_of_BEEP 0F7D             __end_of_OFF_ 0774  
        __initialization 000F             __end_of_main 0445                   ??_BEEP 0073  
       __end_of_Forward_ 0770                   ??_main 0033                   ?_BEEP1 0070  
      __end_of_LCDGotoXY 07B7            LCDByte@isdata 0073                ??_DRIL_ON 0026  
              ??_LCDByte 0074                ??_LCDInit 0076         __end_of_Reverse_ 0768  
       ___awdiv@dividend 0075                   _ANSELH 0189                   i1l2110 0691  
                 i1l2120 06AF                   i1l2112 069C                   i1l2130 06C5  
                 i1l2122 06B0                   i1l2114 06A2                   i1l2132 06CB  
                 i1l2124 06B4                   i1l2116 06A8                   i1l2108 068D  
                 i1l2134 06CD                   i1l2126 06B8                   i1l2118 06A9  
                 i1l2128 06C1                   u150_20 06AF                   u150_21 06AE  
                 u151_20 06B8                   u151_21 06B7                   u152_20 06C1  
                 u152_21 06C0                   u153_20 06CB                   _INTCON 000B  
                 u153_21 06CA                   u147_20 0691                   u147_21 0690  
                 u148_20 069C                   u148_21 069B                   u149_20 06A2  
                 u149_21 06A1                   _TMR1GE 0086                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
              ??_Forward 0026           _LCDWriteString 055C                ??_Reverse 0078  
                 ___wmul 07B7                ??___awdiv 0077                ??___awmod 0077  
       __end_of_count_Hz 075E                   _count2 0040         ___awdiv@quotient 0022  
                 _minute 075E          ___awmod@divisor 0073          ___awmod@counter 0020  
           LCDWriteInt@i 0031             LCDWriteInt@j 002F                   saved_w 007E  
              ?_DRIL_OFF 0070     __size_of_LCDWriteInt 00AA  __end_of__initialization 002D  
          __end_of_BEEP1 0FE1   __end_of_LCDWriteString 05C9                LCDByte@hn 0020  
              LCDByte@ln 0021           __pcstackCOMMON 0070         main@flag_tapping 0037  
           __pidataBANK1 0717                  ??_BEEP1 0073     CheckTAPPING@butcount 0073  
             __pbssBANK0 003B               ??_DRIL_OFF 0078          ?_LCDWriteString 0070  
             _delay_beep 0078               __pmaintext 0031                  ?___wmul 0073  
             __pintentry 0004               _flag_delay 0079                  _T1CKPS0 0084  
                _T1CKPS1 0085                  _T1OSCEN 0083                  _DRIL_ON 07E2  
                _LCDByte 06D5                  _LCDInit 04EF               __stringtab 0757  
                _Forward 0FB5                  _Tapping 0778                  _Reverse 0F7D  
                ___cgram 00A0                  ___awdiv 05C9                  ___awmod 0632  
        __size_of___wmul 002B                  __ptext1 07B7                  __ptext2 0F7D  
                __ptext3 0445                  __ptext4 0632                  __ptext5 05C9  
                __ptext6 04EF                  __ptext7 0FB5                  __ptext8 07E2  
                __ptext9 0F8F             __size_of_isr 0048         ___awmod@dividend 0075  
                _percent 0046               _keypressed 0047                _LCDGotoXY 078A  
   end_of_initialization 002D                _PORTAbits 0005        LCDWriteString@msg 0025  
              _TRISAbits 0085               ?_LCDGotoXY 0076               LCDInit@__i 0025  
             LCDGotoXY@x 0024               LCDGotoXY@y 0076        __size_of_DRIL_OFF 0013  
         __end_of___wmul 07E2       __end_of_Magn_count 0760           __end_of_minute 075F  
    start_initialization 000F              __end_of_ON_ 0778              __end_of_isr 06D5  
          ??_LCDWriteInt 0027         ??_LCDWriteString 0076                 ??___wmul 0077  
             init_fetch0 0FA2              __pdataBANK1 00A0                 ?_DRIL_ON 0070  
               ?_LCDByte 0073                 ?_LCDInit 0070              __pbssCOMMON 0078  
               LCDByte@c 0022                ___latbits 0002            __pcstackBANK0 0020  
            ??_LCDGotoXY 0077         LCDWriteInt@F1306 003B      __end_of_LCDWriteInt 04EF  
          ?_CheckTAPPING 0070                 ?_Forward 0070                 ?_Reverse 0070  
               ?___awdiv 0073                 ?___awmod 0073                __pstrings 0757  
         __size_of_BEEP1 0017              _flag_timer1 0044                 _DRIL_OFF 0F8F  
      interrupt_function 0004           ___wmul@product 0020           ??_CheckTAPPING 0073  
       LCDWriteString@cc 0024              __stringbase 075C        ___wmul@multiplier 0073  
       __size_of_DRIL_ON 0019         __size_of_LCDByte 0042         __size_of_LCDInit 006D  
            _LCDWriteInt 0445                 _Forward_ 0768         __size_of_Forward 0015  
               _Reverse_ 0760         __size_of_Reverse 0012         __size_of___awdiv 0069  
       __size_of___awmod 005B       __end_of__stringtab 075D       CheckTAPPING@result 0075  
               __ptext10 055C                 __ptext11 078A                 __ptext12 06D5  
               __ptext13 0FE1                 __ptext14 0FCA                 __ptext15 0F71  
               __ptext16 068D            __size_of_BEEP 000C                 _count_Hz 075D  
          __size_of_main 0414     __end_of_CheckTAPPING 1000            main@DIRECTION 0036  
               init_ram0 0FA6                 intlevel1 0000           LCDWriteInt@val 0024  
         LCDWriteInt@str 002A                stringcode 0757               _TIM0_count 007A  
             _OPTION_REG 0081                 stringdir 0757                 stringtab 0757  
            main@ON_FLAG 0038            main@RPM_count 0039  __size_of_LCDWriteString 006D  
